/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={268:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var a=n(81),s=n.n(a),i=n(645),r=n.n(i)()(s());r.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),r.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const o=r},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,s,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(r[u]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),t.push(l))}},t}},81:e=>{"use strict";e.exports=function(e){return e[1]}},387:(e,t,n)=>{var a=n(268);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(346).Z)("0b345cf4",a,!1,{})},346:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},s=0;s<t.length;s++){var i=t[s],r=i[0],o={id:e+":"+s,css:i[1],media:i[2],sourceMap:i[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.d(t,{Z:()=>c});var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},r=s&&(document.head||document.getElementsByTagName("head")[0]),o=null,u=0,d=!1,l=function(){},p=null,y="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function c(e,t,n,s){d=n,p=s||{};var r=a(e,t);return f(r),function(t){for(var n=[],s=0;s<r.length;s++){var o=r[s];(u=i[o.id]).refs--,n.push(u)}for(t?f(r=a(e,t)):r=[],s=0;s<n.length;s++){var u;if(0===(u=n[s]).refs){for(var d=0;d<u.parts.length;d++)u.parts[d]();delete i[u.id]}}}}function f(e){for(var t=0;t<e.length;t++){var n=e[t],a=i[n.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](n.parts[s]);for(;s<n.parts.length;s++)a.parts.push(b(n.parts[s]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(s=0;s<n.parts.length;s++)r.push(b(n.parts[s]));i[n.id]={id:n.id,refs:1,parts:r}}}}function h(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function b(e){var t,n,a=document.querySelector("style["+y+'~="'+e.id+'"]');if(a){if(d)return l;a.parentNode.removeChild(a)}if(m){var s=u++;a=o||(o=h()),t=T.bind(null,a,s,!1),n=T.bind(null,a,s,!0)}else a=h(),t=w.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var v,g=(v=[],function(e,t){return v[e]=t,v.filter(Boolean).join("\n")});function T(e,t,n,a){var s=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=g(t,s);else{var i=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}function w(e,t){var n=t.css,a=t.media,s=t.sourceMap;if(a&&e.setAttribute("media",a),p.ssrId&&e.setAttribute(y,t.id),s&&(n+="\n/*# sourceURL="+s.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var i=t[a]={id:a,exports:{}};return e[a](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=Object.freeze({});function t(e){return null==e}function a(e){return null!=e}function s(e){return!0===e}function i(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function r(e){return null!==e&&"object"==typeof e}var o=Object.prototype.toString;function u(e){return"[object Object]"===o.call(e)}function d(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function l(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function p(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===o?JSON.stringify(e,null,2):String(e)}function y(e){var t=parseFloat(e);return isNaN(t)?e:t}function m(e,t){for(var n=Object.create(null),a=e.split(","),s=0;s<a.length;s++)n[a[s]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var c=m("slot,component",!0),f=m("key,ref,slot,slot-scope,is");function h(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var b=Object.prototype.hasOwnProperty;function v(e,t){return b.call(e,t)}function g(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var T=/-(\w)/g,w=g((function(e){return e.replace(T,(function(e,t){return t?t.toUpperCase():""}))})),_=g((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),R=/\B([A-Z])/g,A=g((function(e){return e.replace(R,"-$1").toLowerCase()})),k=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function x(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function S(e,t){for(var n in t)e[n]=t[n];return e}function M(e){for(var t={},n=0;n<e.length;n++)e[n]&&S(t,e[n]);return t}function O(e,t,n){}var I=function(e,t,n){return!1},C=function(e){return e};function E(e,t){if(e===t)return!0;var n=r(e),a=r(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var s=Array.isArray(e),i=Array.isArray(t);if(s&&i)return e.length===t.length&&e.every((function(e,n){return E(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(s||i)return!1;var o=Object.keys(e),u=Object.keys(t);return o.length===u.length&&o.every((function(n){return E(e[n],t[n])}))}catch(e){return!1}}function U(e,t){for(var n=0;n<e.length;n++)if(E(e[n],t))return n;return-1}function P(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var $="data-server-rendered",L=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],j={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:O,parsePlatformTagName:C,mustUseProp:I,async:!0,_lifecycleHooks:D},B=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function F(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var W,z=new RegExp("[^"+B.source+".$_\\d]"),G="__proto__"in{},q="undefined"!=typeof window,H="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,V=H&&WXEnvironment.platform.toLowerCase(),J=q&&window.navigator.userAgent.toLowerCase(),K=J&&/msie|trident/.test(J),Y=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0,X=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===V),Q=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),ee={}.watch,te=!1;if(q)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var ae=function(){return void 0===W&&(W=!q&&!H&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),W},se=q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ie(e){return"function"==typeof e&&/native code/.test(e.toString())}var re,oe="undefined"!=typeof Symbol&&ie(Symbol)&&"undefined"!=typeof Reflect&&ie(Reflect.ownKeys);re="undefined"!=typeof Set&&ie(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ue=O,de=0,le=function(){this.id=de++,this.subs=[]};le.prototype.addSub=function(e){this.subs.push(e)},le.prototype.removeSub=function(e){h(this.subs,e)},le.prototype.depend=function(){le.target&&le.target.addDep(this)},le.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},le.target=null;var pe=[];function ye(e){pe.push(e),le.target=e}function me(){pe.pop(),le.target=pe[pe.length-1]}var ce=function(e,t,n,a,s,i,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=s,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},fe={child:{configurable:!0}};fe.child.get=function(){return this.componentInstance},Object.defineProperties(ce.prototype,fe);var he=function(e){void 0===e&&(e="");var t=new ce;return t.text=e,t.isComment=!0,t};function be(e){return new ce(void 0,void 0,void 0,String(e))}function ve(e){var t=new ce(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ge=Array.prototype,Te=Object.create(ge);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ge[e];F(Te,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var s,i=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":s=n;break;case"splice":s=n.slice(2)}return s&&r.observeArray(s),r.dep.notify(),i}))}));var we=Object.getOwnPropertyNames(Te),_e=!0;function Re(e){_e=e}var Ae=function(e){this.value=e,this.dep=new le,this.vmCount=0,F(e,"__ob__",this),Array.isArray(e)?(G?function(e,t){e.__proto__=t}(e,Te):function(e,t,n){for(var a=0,s=n.length;a<s;a++){var i=n[a];F(e,i,t[i])}}(e,Te,we),this.observeArray(e)):this.walk(e)};function ke(e,t){var n;if(r(e)&&!(e instanceof ce))return v(e,"__ob__")&&e.__ob__ instanceof Ae?n=e.__ob__:_e&&!ae()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Ae(e)),t&&n&&n.vmCount++,n}function xe(e,t,n,a,s){var i=new le,r=Object.getOwnPropertyDescriptor(e,t);if(!r||!1!==r.configurable){var o=r&&r.get,u=r&&r.set;o&&!u||2!==arguments.length||(n=e[t]);var d=!s&&ke(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return le.target&&(i.depend(),d&&(d.dep.depend(),Array.isArray(t)&&Oe(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!u||(u?u.call(e,t):n=t,d=!s&&ke(t),i.notify())}})}}function Se(e,t,n){if(Array.isArray(e)&&d(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(xe(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Me(e,t){if(Array.isArray(e)&&d(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||v(e,t)&&(delete e[t],n&&n.dep.notify())}}function Oe(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Oe(t)}Ae.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)xe(e,t[n])},Ae.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)ke(e[t])};var Ie=j.optionMergeStrategies;function Ce(e,t){if(!t)return e;for(var n,a,s,i=oe?Reflect.ownKeys(t):Object.keys(t),r=0;r<i.length;r++)"__ob__"!==(n=i[r])&&(a=e[n],s=t[n],v(e,n)?a!==s&&u(a)&&u(s)&&Ce(a,s):Se(e,n,s));return e}function Ee(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,s="function"==typeof e?e.call(n,n):e;return a?Ce(a,s):s}:t?e?function(){return Ce("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Ue(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Pe(e,t,n,a){var s=Object.create(e||null);return t?S(s,t):s}Ie.data=function(e,t,n){return n?Ee(e,t,n):t&&"function"!=typeof t?e:Ee(e,t)},D.forEach((function(e){Ie[e]=Ue})),L.forEach((function(e){Ie[e+"s"]=Pe})),Ie.watch=function(e,t,n,a){if(e===ee&&(e=void 0),t===ee&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var s={};for(var i in S(s,e),t){var r=s[i],o=t[i];r&&!Array.isArray(r)&&(r=[r]),s[i]=r?r.concat(o):Array.isArray(o)?o:[o]}return s},Ie.props=Ie.methods=Ie.inject=Ie.computed=function(e,t,n,a){if(!e)return t;var s=Object.create(null);return S(s,e),t&&S(s,t),s},Ie.provide=Ee;var $e=function(e,t){return void 0===t?e:t};function Le(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,s,i={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(s=n[a])&&(i[w(s)]={type:null});else if(u(n))for(var r in n)s=n[r],i[w(r)]=u(s)?s:{type:s};e.props=i}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var s=0;s<n.length;s++)a[n[s]]={from:n[s]};else if(u(n))for(var i in n){var r=n[i];a[i]=u(r)?S({from:i},r):{from:r}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=Le(e,t.extends,n)),t.mixins))for(var a=0,s=t.mixins.length;a<s;a++)e=Le(e,t.mixins[a],n);var i,r={};for(i in e)o(i);for(i in t)v(e,i)||o(i);function o(a){var s=Ie[a]||$e;r[a]=s(e[a],t[a],n,a)}return r}function De(e,t,n,a){if("string"==typeof n){var s=e[t];if(v(s,n))return s[n];var i=w(n);if(v(s,i))return s[i];var r=_(i);return v(s,r)?s[r]:s[n]||s[i]||s[r]}}function je(e,t,n,a){var s=t[e],i=!v(n,e),r=n[e],o=We(Boolean,s.type);if(o>-1)if(i&&!v(s,"default"))r=!1;else if(""===r||r===A(e)){var u=We(String,s.type);(u<0||o<u)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(v(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof a&&"Function"!==Ne(t.type)?a.call(e):a}}(a,s,e);var d=_e;Re(!0),ke(r),Re(d)}return r}var Be=/^\s*function (\w+)/;function Ne(e){var t=e&&e.toString().match(Be);return t?t[1]:""}function Fe(e,t){return Ne(e)===Ne(t)}function We(e,t){if(!Array.isArray(t))return Fe(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(Fe(t[n],e))return n;return-1}function ze(e,t,n){ye();try{if(t)for(var a=t;a=a.$parent;){var s=a.$options.errorCaptured;if(s)for(var i=0;i<s.length;i++)try{if(!1===s[i].call(a,e,t,n))return}catch(e){qe(e,a,"errorCaptured hook")}}qe(e,t,n)}finally{me()}}function Ge(e,t,n,a,s){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&l(i)&&!i._handled&&(i.catch((function(e){return ze(e,a,s+" (Promise/async)")})),i._handled=!0)}catch(e){ze(e,a,s)}return i}function qe(e,t,n){if(j.errorHandler)try{return j.errorHandler.call(null,e,t,n)}catch(t){t!==e&&He(t)}He(e)}function He(e,t,n){if(!q&&!H||"undefined"==typeof console)throw e;console.error(e)}var Ve,Je=!1,Ke=[],Ye=!1;function Ze(){Ye=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ie(Promise)){var Xe=Promise.resolve();Ve=function(){Xe.then(Ze),X&&setTimeout(O)},Je=!0}else if(K||"undefined"==typeof MutationObserver||!ie(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&ie(setImmediate)?function(){setImmediate(Ze)}:function(){setTimeout(Ze,0)};else{var Qe=1,et=new MutationObserver(Ze),tt=document.createTextNode(String(Qe));et.observe(tt,{characterData:!0}),Ve=function(){Qe=(Qe+1)%2,tt.data=String(Qe)},Je=!0}function nt(e,t){var n;if(Ke.push((function(){if(e)try{e.call(t)}catch(e){ze(e,t,"nextTick")}else n&&n(t)})),Ye||(Ye=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var at=new re;function st(e){it(e,at),at.clear()}function it(e,t){var n,a,s=Array.isArray(e);if(!(!s&&!r(e)||Object.isFrozen(e)||e instanceof ce)){if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(s)for(n=e.length;n--;)it(e[n],t);else for(n=(a=Object.keys(e)).length;n--;)it(e[a[n]],t)}}var rt=g((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function ot(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return Ge(a,null,arguments,t,"v-on handler");for(var s=a.slice(),i=0;i<s.length;i++)Ge(s[i],null,e,t,"v-on handler")}return n.fns=e,n}function ut(e,n,a,i,r,o){var u,d,l,p;for(u in e)d=e[u],l=n[u],p=rt(u),t(d)||(t(l)?(t(d.fns)&&(d=e[u]=ot(d,o)),s(p.once)&&(d=e[u]=r(p.name,d,p.capture)),a(p.name,d,p.capture,p.passive,p.params)):d!==l&&(l.fns=d,e[u]=l));for(u in n)t(e[u])&&i((p=rt(u)).name,n[u],p.capture)}function dt(e,n,i){var r;e instanceof ce&&(e=e.data.hook||(e.data.hook={}));var o=e[n];function u(){i.apply(this,arguments),h(r.fns,u)}t(o)?r=ot([u]):a(o.fns)&&s(o.merged)?(r=o).fns.push(u):r=ot([o,u]),r.merged=!0,e[n]=r}function lt(e,t,n,s,i){if(a(t)){if(v(t,n))return e[n]=t[n],i||delete t[n],!0;if(v(t,s))return e[n]=t[s],i||delete t[s],!0}return!1}function pt(e){return i(e)?[be(e)]:Array.isArray(e)?mt(e):void 0}function yt(e){return a(e)&&a(e.text)&&!1===e.isComment}function mt(e,n){var r,o,u,d,l=[];for(r=0;r<e.length;r++)t(o=e[r])||"boolean"==typeof o||(d=l[u=l.length-1],Array.isArray(o)?o.length>0&&(yt((o=mt(o,(n||"")+"_"+r))[0])&&yt(d)&&(l[u]=be(d.text+o[0].text),o.shift()),l.push.apply(l,o)):i(o)?yt(d)?l[u]=be(d.text+o):""!==o&&l.push(be(o)):yt(o)&&yt(d)?l[u]=be(d.text+o.text):(s(e._isVList)&&a(o.tag)&&t(o.key)&&a(n)&&(o.key="__vlist"+n+"_"+r+"__"),l.push(o)));return l}function ct(e,t){if(e){for(var n=Object.create(null),a=oe?Reflect.ownKeys(e):Object.keys(e),s=0;s<a.length;s++){var i=a[s];if("__ob__"!==i){for(var r=e[i].from,o=t;o;){if(o._provided&&v(o._provided,r)){n[i]=o._provided[r];break}o=o.$parent}if(!o&&"default"in e[i]){var u=e[i].default;n[i]="function"==typeof u?u.call(t):u}}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},a=0,s=e.length;a<s;a++){var i=e[a],r=i.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,i.context!==t&&i.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(i);else{var o=r.slot,u=n[o]||(n[o]=[]);"template"===i.tag?u.push.apply(u,i.children||[]):u.push(i)}}for(var d in n)n[d].every(ht)&&delete n[d];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function bt(e){return e.isComment&&e.asyncFactory}function vt(t,n,a){var s,i=Object.keys(n).length>0,r=t?!!t.$stable:!i,o=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(r&&a&&a!==e&&o===a.$key&&!i&&!a.$hasNormal)return a;for(var u in s={},t)t[u]&&"$"!==u[0]&&(s[u]=gt(n,u,t[u]))}else s={};for(var d in n)d in s||(s[d]=Tt(n,d));return t&&Object.isExtensible(t)&&(t._normalized=s),F(s,"$stable",r),F(s,"$key",o),F(s,"$hasNormal",i),s}function gt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:pt(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!bt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function Tt(e,t){return function(){return e[t]}}function wt(e,t){var n,s,i,o,u;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),s=0,i=e.length;s<i;s++)n[s]=t(e[s],s);else if("number"==typeof e)for(n=new Array(e),s=0;s<e;s++)n[s]=t(s+1,s);else if(r(e))if(oe&&e[Symbol.iterator]){n=[];for(var d=e[Symbol.iterator](),l=d.next();!l.done;)n.push(t(l.value,n.length)),l=d.next()}else for(o=Object.keys(e),n=new Array(o.length),s=0,i=o.length;s<i;s++)u=o[s],n[s]=t(e[u],u,s);return a(n)||(n=[]),n._isVList=!0,n}function _t(e,t,n,a){var s,i=this.$scopedSlots[e];i?(n=n||{},a&&(n=S(S({},a),n)),s=i(n)||("function"==typeof t?t():t)):s=this.$slots[e]||("function"==typeof t?t():t);var r=n&&n.slot;return r?this.$createElement("template",{slot:r},s):s}function Rt(e){return De(this.$options,"filters",e)||C}function At(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function kt(e,t,n,a,s){var i=j.keyCodes[t]||n;return s&&a&&!j.keyCodes[t]?At(s,a):i?At(i,e):a?A(a)!==t:void 0===e}function xt(e,t,n,a,s){if(n&&r(n)){var i;Array.isArray(n)&&(n=M(n));var o=function(r){if("class"===r||"style"===r||f(r))i=e;else{var o=e.attrs&&e.attrs.type;i=a||j.mustUseProp(t,o,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=w(r),d=A(r);u in i||d in i||(i[r]=n[r],s&&((e.on||(e.on={}))["update:"+r]=function(e){n[r]=e}))};for(var u in n)o(u)}return e}function St(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Ot(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function Mt(e,t,n){return Ot(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ot(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&It(e[a],t+"_"+a,n);else It(e,t,n)}function It(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Ct(e,t){if(t&&u(t)){var n=e.on=e.on?S({},e.on):{};for(var a in t){var s=n[a],i=t[a];n[a]=s?[].concat(s,i):i}}return e}function Et(e,t,n,a){t=t||{$stable:!n};for(var s=0;s<e.length;s++){var i=e[s];Array.isArray(i)?Et(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return a&&(t.$key=a),t}function Ut(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Pt(e,t){return"string"==typeof e?t+e:e}function $t(e){e._o=Mt,e._n=y,e._s=p,e._l=wt,e._t=_t,e._q=E,e._i=U,e._m=St,e._f=Rt,e._k=kt,e._b=xt,e._v=be,e._e=he,e._u=Et,e._g=Ct,e._d=Ut,e._p=Pt}function Lt(t,n,a,i,r){var o,u=this,d=r.options;v(i,"_uid")?(o=Object.create(i))._original=i:(o=i,i=i._original);var l=s(d._compiled),p=!l;this.data=t,this.props=n,this.children=a,this.parent=i,this.listeners=t.on||e,this.injections=ct(d.inject,i),this.slots=function(){return u.$slots||vt(t.scopedSlots,u.$slots=ft(a,i)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vt(t.scopedSlots,this.slots())}}),l&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=vt(t.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,t,n,a){var s=zt(o,e,t,n,a,p);return s&&!Array.isArray(s)&&(s.fnScopeId=d._scopeId,s.fnContext=i),s}:this._c=function(e,t,n,a){return zt(o,e,t,n,a,p)}}function Dt(e,t,n,a,s){var i=ve(e);return i.fnContext=n,i.fnOptions=a,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function jt(e,t){for(var n in t)e[w(n)]=t[n]}$t(Lt.prototype);var Bt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Bt.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},s=e.data.inlineTemplate;return a(s)&&(n.render=s.render,n.staticRenderFns=s.staticRenderFns),new e.componentOptions.Ctor(n)}(e,Qt)).$mount(t?e.elm:void 0,t)},prepatch:function(t,n){var a=n.componentOptions;!function(t,n,a,s,i){var r=s.data.scopedSlots,o=t.$scopedSlots,u=!!(r&&!r.$stable||o!==e&&!o.$stable||r&&t.$scopedSlots.$key!==r.$key||!r&&t.$scopedSlots.$key),d=!!(i||t.$options._renderChildren||u);if(t.$options._parentVnode=s,t.$vnode=s,t._vnode&&(t._vnode.parent=s),t.$options._renderChildren=i,t.$attrs=s.data.attrs||e,t.$listeners=a||e,n&&t.$options.props){Re(!1);for(var l=t._props,p=t.$options._propKeys||[],y=0;y<p.length;y++){var m=p[y],c=t.$options.props;l[m]=je(m,c,n,t)}Re(!0),t.$options.propsData=n}a=a||e;var f=t.$options._parentListeners;t.$options._parentListeners=a,Xt(t,a,f),d&&(t.$slots=ft(i,s.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,a.propsData,a.listeners,n,a.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,sn(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,on.push(t)):nn(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?an(t,!0):t.$destroy())}},Nt=Object.keys(Bt);function Ft(n,i,o,u,d){if(!t(n)){var p=o.$options._base;if(r(n)&&(n=p.extend(n)),"function"==typeof n){var y;if(t(n.cid)&&(n=function(e,n){if(s(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var i=Ht;if(i&&a(e.owners)&&-1===e.owners.indexOf(i)&&e.owners.push(i),s(e.loading)&&a(e.loadingComp))return e.loadingComp;if(i&&!a(e.owners)){var o=e.owners=[i],u=!0,d=null,p=null;i.$on("hook:destroyed",(function(){return h(o,i)}));var y=function(e){for(var t=0,n=o.length;t<n;t++)o[t].$forceUpdate();e&&(o.length=0,null!==d&&(clearTimeout(d),d=null),null!==p&&(clearTimeout(p),p=null))},m=P((function(t){e.resolved=Vt(t,n),u?o.length=0:y(!0)})),c=P((function(t){a(e.errorComp)&&(e.error=!0,y(!0))})),f=e(m,c);return r(f)&&(l(f)?t(e.resolved)&&f.then(m,c):l(f.component)&&(f.component.then(m,c),a(f.error)&&(e.errorComp=Vt(f.error,n)),a(f.loading)&&(e.loadingComp=Vt(f.loading,n),0===f.delay?e.loading=!0:d=setTimeout((function(){d=null,t(e.resolved)&&t(e.error)&&(e.loading=!0,y(!1))}),f.delay||200)),a(f.timeout)&&(p=setTimeout((function(){p=null,t(e.resolved)&&c(null)}),f.timeout)))),u=!1,e.loading?e.loadingComp:e.resolved}}(y=n,p),void 0===n))return function(e,t,n,a,s){var i=he();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:a,tag:s},i}(y,i,o,u,d);i=i||{},xn(n),a(i.model)&&function(e,t){var n=e.model&&e.model.prop||"value",s=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),r=i[s],o=t.model.callback;a(r)?(Array.isArray(r)?-1===r.indexOf(o):r!==o)&&(i[s]=[o].concat(r)):i[s]=o}(n.options,i);var m=function(e,n,s){var i=n.options.props;if(!t(i)){var r={},o=e.attrs,u=e.props;if(a(o)||a(u))for(var d in i){var l=A(d);lt(r,u,d,l,!0)||lt(r,o,d,l,!1)}return r}}(i,n);if(s(n.options.functional))return function(t,n,s,i,r){var o=t.options,u={},d=o.props;if(a(d))for(var l in d)u[l]=je(l,d,n||e);else a(s.attrs)&&jt(u,s.attrs),a(s.props)&&jt(u,s.props);var p=new Lt(s,u,r,i,t),y=o.render.call(null,p._c,p);if(y instanceof ce)return Dt(y,s,p.parent,o);if(Array.isArray(y)){for(var m=pt(y)||[],c=new Array(m.length),f=0;f<m.length;f++)c[f]=Dt(m[f],s,p.parent,o);return c}}(n,m,i,o,u);var c=i.on;if(i.on=i.nativeOn,s(n.options.abstract)){var f=i.slot;i={},f&&(i.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Nt.length;n++){var a=Nt[n],s=t[a],i=Bt[a];s===i||s&&s._merged||(t[a]=s?Wt(i,s):i)}}(i);var b=n.options.name||d;return new ce("vue-component-"+n.cid+(b?"-"+b:""),i,void 0,void 0,void 0,o,{Ctor:n,propsData:m,listeners:c,tag:d,children:u},y)}}}function Wt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function zt(e,t,n,o,u,d){return(Array.isArray(n)||i(n))&&(u=o,o=n,n=void 0),s(d)&&(u=2),function(e,t,n,s,i){if(a(n)&&a(n.__ob__))return he();if(a(n)&&a(n.is)&&(t=n.is),!t)return he();var o,u,d;(Array.isArray(s)&&"function"==typeof s[0]&&((n=n||{}).scopedSlots={default:s[0]},s.length=0),2===i?s=pt(s):1===i&&(s=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(s)),"string"==typeof t)?(u=e.$vnode&&e.$vnode.ns||j.getTagNamespace(t),o=j.isReservedTag(t)?new ce(j.parsePlatformTagName(t),n,s,void 0,void 0,e):n&&n.pre||!a(d=De(e.$options,"components",t))?new ce(t,n,s,void 0,void 0,e):Ft(d,n,e,s,t)):o=Ft(t,n,e,s);return Array.isArray(o)?o:a(o)?(a(u)&&Gt(o,u),a(n)&&function(e){r(e.style)&&st(e.style),r(e.class)&&st(e.class)}(n),o):he()}(e,t,n,o,u)}function Gt(e,n,i){if(e.ns=n,"foreignObject"===e.tag&&(n=void 0,i=!0),a(e.children))for(var r=0,o=e.children.length;r<o;r++){var u=e.children[r];a(u.tag)&&(t(u.ns)||s(i)&&"svg"!==u.tag)&&Gt(u,n,i)}}var qt,Ht=null;function Vt(e,t){return(e.__esModule||oe&&"Module"===e[Symbol.toStringTag])&&(e=e.default),r(e)?t.extend(e):e}function Jt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(a(n)&&(a(n.componentOptions)||bt(n)))return n}}function Kt(e,t){qt.$on(e,t)}function Yt(e,t){qt.$off(e,t)}function Zt(e,t){var n=qt;return function a(){var s=t.apply(null,arguments);null!==s&&n.$off(e,a)}}function Xt(e,t,n){qt=e,ut(t,n||{},Kt,Yt,Zt,e),qt=void 0}var Qt=null;function en(e){var t=Qt;return Qt=e,function(){Qt=t}}function tn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function nn(e,t){if(t){if(e._directInactive=!1,tn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)nn(e.$children[n]);sn(e,"activated")}}function an(e,t){if(!(t&&(e._directInactive=!0,tn(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)an(e.$children[n]);sn(e,"deactivated")}}function sn(e,t){ye();var n=e.$options[t],a=t+" hook";if(n)for(var s=0,i=n.length;s<i;s++)Ge(n[s],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),me()}var rn=[],on=[],un={},dn=!1,ln=!1,pn=0,yn=0,mn=Date.now;if(q&&!K){var cn=window.performance;cn&&"function"==typeof cn.now&&mn()>document.createEvent("Event").timeStamp&&(mn=function(){return cn.now()})}function fn(){var e,t;for(yn=mn(),ln=!0,rn.sort((function(e,t){return e.id-t.id})),pn=0;pn<rn.length;pn++)(e=rn[pn]).before&&e.before(),t=e.id,un[t]=null,e.run();var n=on.slice(),a=rn.slice();pn=rn.length=on.length=0,un={},dn=ln=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,nn(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&sn(a,"updated")}}(a),se&&j.devtools&&se.emit("flush")}var hn=0,bn=function(e,t,n,a,s){this.vm=e,s&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++hn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new re,this.newDepIds=new re,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!z.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};bn.prototype.get=function(){var e;ye(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;ze(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&st(e),me(),this.cleanupDeps()}return e},bn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},bn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},bn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==un[t]){if(un[t]=!0,ln){for(var n=rn.length-1;n>pn&&rn[n].id>e.id;)n--;rn.splice(n+1,0,e)}else rn.push(e);dn||(dn=!0,nt(fn))}}(this)},bn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||r(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';Ge(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},bn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},bn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},bn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||h(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var vn={enumerable:!0,configurable:!0,get:O,set:O};function gn(e,t,n){vn.get=function(){return this[t][n]},vn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,vn)}var Tn={lazy:!0};function wn(e,t,n){var a=!ae();"function"==typeof n?(vn.get=a?_n(t):Rn(n),vn.set=O):(vn.get=n.get?a&&!1!==n.cache?_n(t):Rn(n.get):O,vn.set=n.set||O),Object.defineProperty(e,t,vn)}function _n(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),le.target&&t.depend(),t.value}}function Rn(e){return function(){return e.call(this,this)}}function An(e,t,n,a){return u(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var kn=0;function xn(e){var t=e.options;if(e.super){var n=xn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var s in n)n[s]!==a[s]&&(t||(t={}),t[s]=n[s]);return t}(e);a&&S(e.extendOptions,a),(t=e.options=Le(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function Mn(e){return e&&(e.Ctor.options.name||e.tag)}function On(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:(n=e,!("[object RegExp]"!==o.call(n))&&e.test(t));var n}function In(e,t){var n=e.cache,a=e.keys,s=e._vnode;for(var i in n){var r=n[i];if(r){var o=r.name;o&&!t(o)&&Cn(n,i,a,s)}}}function Cn(e,t,n,a){var s=e[t];!s||a&&s.tag===a.tag||s.componentInstance.$destroy(),e[t]=null,h(n,t)}!function(t){t.prototype._init=function(t){var n=this;n._uid=kn++,n._isVue=!0,t&&t._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var s=a.componentOptions;n.propsData=s.propsData,n._parentListeners=s.listeners,n._renderChildren=s.children,n._componentTag=s.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(n,t):n.$options=Le(xn(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Xt(e,t)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,a=t.$vnode=n._parentVnode,s=a&&a.context;t.$slots=ft(n._renderChildren,s),t.$scopedSlots=e,t._c=function(e,n,a,s){return zt(t,e,n,a,s,!1)},t.$createElement=function(e,n,a,s){return zt(t,e,n,a,s,!0)};var i=a&&a.data;xe(t,"$attrs",i&&i.attrs||e,null,!0),xe(t,"$listeners",n._parentListeners||e,null,!0)}(n),sn(n,"beforeCreate"),function(e){var t=ct(e.$options.inject,e);t&&(Re(!1),Object.keys(t).forEach((function(n){xe(e,n,t[n])})),Re(!0))}(n),function(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},s=e.$options._propKeys=[];e.$parent&&Re(!1);var i=function(i){s.push(i);var r=je(i,t,n,e);xe(a,i,r),i in e||gn(e,"_props",i)};for(var r in t)i(r);Re(!0)}(e,t.props),t.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?O:k(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?function(e,t){ye();try{return e.call(t,t)}catch(e){return ze(e,t,"data()"),{}}finally{me()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,s=(e.$options.methods,n.length);s--;){var i=n[s];a&&v(a,i)||N(i)||gn(e,"_data",i)}ke(t,!0)}(e):ke(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ae();for(var s in t){var i=t[s],r="function"==typeof i?i:i.get;a||(n[s]=new bn(e,r||O,O,Tn)),s in e||wn(e,s,i)}}(e,t.computed),t.watch&&t.watch!==ee&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var s=0;s<a.length;s++)An(e,n,a[s]);else An(e,n,a)}}(e,t.watch)}(n),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(n),sn(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Sn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=Se,e.prototype.$delete=Me,e.prototype.$watch=function(e,t,n){var a=this;if(u(t))return An(a,e,t,n);(n=n||{}).user=!0;var s=new bn(a,e,t,n);if(n.immediate){var i='callback for immediate watcher "'+s.expression+'"';ye(),Ge(t,a,[s.value],a,i),me()}return function(){s.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var s=0,i=e.length;s<i;s++)a.$on(e[s],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,s=e.length;a<s;a++)n.$off(e[a],t);return n}var i,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var o=r.length;o--;)if((i=r[o])===t||i.fn===t){r.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?x(n):n;for(var a=x(arguments,1),s='event handler for "'+e+'"',i=0,r=n.length;i<r;i++)Ge(n[i],t,a,t,s)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,s=n._vnode,i=en(n);n._vnode=e,n.$el=s?n.__patch__(s,e):n.__patch__(n.$el,e,t,!1),i(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){sn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||h(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),sn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){$t(e.prototype),e.prototype.$nextTick=function(e){return nt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,s=n._parentVnode;s&&(t.$scopedSlots=vt(s.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=s;try{Ht=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){ze(n,t,"render"),e=t._vnode}finally{Ht=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ce||(e=he()),e.parent=s,e}}(Sn);var En=[String,RegExp,Array],Un={name:"keep-alive",abstract:!0,props:{include:En,exclude:En,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,s=e.keyToCache;if(a){var i=a.tag,r=a.componentInstance,o=a.componentOptions;t[s]={name:Mn(o),tag:i,componentInstance:r},n.push(s),this.max&&n.length>parseInt(this.max)&&Cn(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Cn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){In(e,(function(e){return On(t,e)}))})),this.$watch("exclude",(function(t){In(e,(function(e){return!On(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Jt(e),n=t&&t.componentOptions;if(n){var a=Mn(n),s=this.include,i=this.exclude;if(s&&(!a||!On(s,a))||i&&a&&On(i,a))return t;var r=this.cache,o=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;r[u]?(t.componentInstance=r[u].componentInstance,h(o,u),o.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}},Pn={KeepAlive:Un};!function(e){var t={get:function(){return j}};Object.defineProperty(e,"config",t),e.util={warn:ue,extend:S,mergeOptions:Le,defineReactive:xe},e.set=Se,e.delete=Me,e.nextTick=nt,e.observable=function(e){return ke(e),e},e.options=Object.create(null),L.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,S(e.options.components,Pn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=x(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Le(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,s=e._Ctor||(e._Ctor={});if(s[a])return s[a];var i=e.name||n.options.name,r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=Le(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)wn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,L.forEach((function(e){r[e]=n[e]})),i&&(r.options.components[i]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=S({},r.options),s[a]=r,r}}(e),function(e){L.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:ae}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Lt}),Sn.version="2.6.14";var $n=m("style,class"),Ln=m("input,textarea,option,select,progress"),Dn=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},jn=m("contenteditable,draggable,spellcheck"),Bn=m("events,caret,typing,plaintext-only"),Nn=m("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Fn="http://www.w3.org/1999/xlink",Wn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},zn=function(e){return Wn(e)?e.slice(6,e.length):""},Gn=function(e){return null==e||!1===e};function qn(e,t){return{staticClass:Hn(e.staticClass,t.staticClass),class:a(e.class)?[e.class,t.class]:t.class}}function Hn(e,t){return e?t?e+" "+t:e:t||""}function Vn(e){return Array.isArray(e)?function(e){for(var t,n="",s=0,i=e.length;s<i;s++)a(t=Vn(e[s]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):r(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Jn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Kn=m("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yn=m("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Zn=function(e){return Kn(e)||Yn(e)};function Xn(e){return Yn(e)?"svg":"math"===e?"math":void 0}var Qn=Object.create(null),ea=m("text,number,password,search,email,tel,url");function ta(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var na=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Jn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),aa={create:function(e,t){sa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(sa(e,!0),sa(t))},destroy:function(e){sa(e,!0)}};function sa(e,t){var n=e.data.ref;if(a(n)){var s=e.context,i=e.componentInstance||e.elm,r=s.$refs;t?Array.isArray(r[n])?h(r[n],i):r[n]===i&&(r[n]=void 0):e.data.refInFor?Array.isArray(r[n])?r[n].indexOf(i)<0&&r[n].push(i):r[n]=[i]:r[n]=i}}var ia=new ce("",{},[]),ra=["create","activate","update","remove","destroy"];function oa(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&a(e.data)===a(n.data)&&function(e,t){if("input"!==e.tag)return!0;var n,s=a(n=e.data)&&a(n=n.attrs)&&n.type,i=a(n=t.data)&&a(n=n.attrs)&&n.type;return s===i||ea(s)&&ea(i)}(e,n)||s(e.isAsyncPlaceholder)&&t(n.asyncFactory.error))}function ua(e,t,n){var s,i,r={};for(s=t;s<=n;++s)a(i=e[s].key)&&(r[i]=s);return r}var da={create:la,update:la,destroy:function(e){la(e,ia)}};function la(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,s,i=e===ia,r=t===ia,o=ya(e.data.directives,e.context),u=ya(t.data.directives,t.context),d=[],l=[];for(n in u)a=o[n],s=u[n],a?(s.oldValue=a.value,s.oldArg=a.arg,ca(s,"update",t,e),s.def&&s.def.componentUpdated&&l.push(s)):(ca(s,"bind",t,e),s.def&&s.def.inserted&&d.push(s));if(d.length){var p=function(){for(var n=0;n<d.length;n++)ca(d[n],"inserted",t,e)};i?dt(t,"insert",p):p()}if(l.length&&dt(t,"postpatch",(function(){for(var n=0;n<l.length;n++)ca(l[n],"componentUpdated",t,e)})),!i)for(n in o)u[n]||ca(o[n],"unbind",e,e,r)}(e,t)}var pa=Object.create(null);function ya(e,t){var n,a,s=Object.create(null);if(!e)return s;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=pa),s[ma(a)]=a,a.def=De(t.$options,"directives",a.name);return s}function ma(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ca(e,t,n,a,s){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,a,s)}catch(a){ze(a,n.context,"directive "+e.name+" "+t+" hook")}}var fa=[aa,da];function ha(e,n){var s=n.componentOptions;if(!(a(s)&&!1===s.Ctor.options.inheritAttrs||t(e.data.attrs)&&t(n.data.attrs))){var i,r,o=n.elm,u=e.data.attrs||{},d=n.data.attrs||{};for(i in a(d.__ob__)&&(d=n.data.attrs=S({},d)),d)r=d[i],u[i]!==r&&ba(o,i,r,n.data.pre);for(i in(K||Z)&&d.value!==u.value&&ba(o,"value",d.value),u)t(d[i])&&(Wn(i)?o.removeAttributeNS(Fn,zn(i)):jn(i)||o.removeAttribute(i))}}function ba(e,t,n,a){a||e.tagName.indexOf("-")>-1?va(e,t,n):Nn(t)?Gn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):jn(t)?e.setAttribute(t,function(e,t){return Gn(t)||"false"===t?"false":"contenteditable"===e&&Bn(t)?t:"true"}(t,n)):Wn(t)?Gn(n)?e.removeAttributeNS(Fn,zn(t)):e.setAttributeNS(Fn,t,n):va(e,t,n)}function va(e,t,n){if(Gn(n))e.removeAttribute(t);else{if(K&&!Y&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var ga={create:ha,update:ha};function Ta(e,n){var s=n.elm,i=n.data,r=e.data;if(!(t(i.staticClass)&&t(i.class)&&(t(r)||t(r.staticClass)&&t(r.class)))){var o=function(e){for(var t=e.data,n=e,s=e;a(s.componentInstance);)(s=s.componentInstance._vnode)&&s.data&&(t=qn(s.data,t));for(;a(n=n.parent);)n&&n.data&&(t=qn(t,n.data));return i=t.staticClass,r=t.class,a(i)||a(r)?Hn(i,Vn(r)):"";var i,r}(n),u=s._transitionClasses;a(u)&&(o=Hn(o,Vn(u))),o!==s._prevClass&&(s.setAttribute("class",o),s._prevClass=o)}}var wa,_a,Ra,Aa,ka,xa,Sa={create:Ta,update:Ta},Ma=/[\w).+\-_$\]]/;function Oa(e){var t,n,a,s,i,r=!1,o=!1,u=!1,d=!1,l=0,p=0,y=0,m=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(u)96===t&&92!==n&&(u=!1);else if(d)47===t&&92!==n&&(d=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||l||p||y){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:u=!0;break;case 40:y++;break;case 41:y--;break;case 91:p++;break;case 93:p--;break;case 123:l++;break;case 125:l--}if(47===t){for(var c=a-1,f=void 0;c>=0&&" "===(f=e.charAt(c));c--);f&&Ma.test(f)||(d=!0)}}else void 0===s?(m=a+1,s=e.slice(0,a).trim()):h();function h(){(i||(i=[])).push(e.slice(m,a).trim()),m=a+1}if(void 0===s?s=e.slice(0,a).trim():0!==m&&h(),i)for(a=0;a<i.length;a++)s=Ia(s,i[a]);return s}function Ia(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),s=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==s?","+s:s)}function Ca(e,t){console.error("[Vue compiler]: "+e)}function Ea(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Ua(e,t,n,a,s){(e.props||(e.props=[])).push(Wa({name:t,value:n,dynamic:s},a)),e.plain=!1}function Pa(e,t,n,a,s){(s?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Wa({name:t,value:n,dynamic:s},a)),e.plain=!1}function $a(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(Wa({name:t,value:n},a))}function La(e,t,n,a,s,i,r,o){(e.directives||(e.directives=[])).push(Wa({name:t,rawName:n,value:a,arg:s,isDynamicArg:i,modifiers:r},o)),e.plain=!1}function Da(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function ja(t,n,a,s,i,r,o,u){var d;(s=s||e).right?u?n="("+n+")==='click'?'contextmenu':("+n+")":"click"===n&&(n="contextmenu",delete s.right):s.middle&&(u?n="("+n+")==='click'?'mouseup':("+n+")":"click"===n&&(n="mouseup")),s.capture&&(delete s.capture,n=Da("!",n,u)),s.once&&(delete s.once,n=Da("~",n,u)),s.passive&&(delete s.passive,n=Da("&",n,u)),s.native?(delete s.native,d=t.nativeEvents||(t.nativeEvents={})):d=t.events||(t.events={});var l=Wa({value:a.trim(),dynamic:u},o);s!==e&&(l.modifiers=s);var p=d[n];Array.isArray(p)?i?p.unshift(l):p.push(l):d[n]=p?i?[l,p]:[p,l]:l,t.plain=!1}function Ba(e,t,n){var a=Na(e,":"+t)||Na(e,"v-bind:"+t);if(null!=a)return Oa(a);if(!1!==n){var s=Na(e,t);if(null!=s)return JSON.stringify(s)}}function Na(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var s=e.attrsList,i=0,r=s.length;i<r;i++)if(s[i].name===t){s.splice(i,1);break}return n&&delete e.attrsMap[t],a}function Fa(e,t){for(var n=e.attrsList,a=0,s=n.length;a<s;a++){var i=n[a];if(t.test(i.name))return n.splice(a,1),i}}function Wa(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function za(e,t,n){var a=n||{},s=a.number,i="$$v";a.trim&&(i="(typeof $$v === 'string'? $$v.trim(): $$v)"),s&&(i="_n("+i+")");var r=Ga(t,i);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+r+"}"}}function Ga(e,t){var n=function(e){if(e=e.trim(),wa=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<wa-1)return(Aa=e.lastIndexOf("."))>-1?{exp:e.slice(0,Aa),key:'"'+e.slice(Aa+1)+'"'}:{exp:e,key:null};for(_a=e,Aa=ka=xa=0;!Ha();)Va(Ra=qa())?Ka(Ra):91===Ra&&Ja(Ra);return{exp:e.slice(0,ka),key:e.slice(ka+1,xa)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function qa(){return _a.charCodeAt(++Aa)}function Ha(){return Aa>=wa}function Va(e){return 34===e||39===e}function Ja(e){var t=1;for(ka=Aa;!Ha();)if(Va(e=qa()))Ka(e);else if(91===e&&t++,93===e&&t--,0===t){xa=Aa;break}}function Ka(e){for(var t=e;!Ha()&&(e=qa())!==t;);}var Ya;function Za(e,t,n){var a=Ya;return function s(){var i=t.apply(null,arguments);null!==i&&es(e,s,n,a)}}var Xa=Je&&!(Q&&Number(Q[1])<=53);function Qa(e,t,n,a){if(Xa){var s=yn,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=s||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}Ya.addEventListener(e,t,te?{capture:n,passive:a}:n)}function es(e,t,n,a){(a||Ya).removeEventListener(e,t._wrapper||t,n)}function ts(e,n){if(!t(e.data.on)||!t(n.data.on)){var s=n.data.on||{},i=e.data.on||{};Ya=n.elm,function(e){if(a(e.__r)){var t=K?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(s),ut(s,i,Qa,es,Za,n.context),Ya=void 0}}var ns,as={create:ts,update:ts};function ss(e,n){if(!t(e.data.domProps)||!t(n.data.domProps)){var s,i,r=n.elm,o=e.data.domProps||{},u=n.data.domProps||{};for(s in a(u.__ob__)&&(u=n.data.domProps=S({},u)),o)s in u||(r[s]="");for(s in u){if(i=u[s],"textContent"===s||"innerHTML"===s){if(n.children&&(n.children.length=0),i===o[s])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===s&&"PROGRESS"!==r.tagName){r._value=i;var d=t(i)?"":String(i);is(r,d)&&(r.value=d)}else if("innerHTML"===s&&Yn(r.tagName)&&t(r.innerHTML)){(ns=ns||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var l=ns.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;l.firstChild;)r.appendChild(l.firstChild)}else if(i!==o[s])try{r[s]=i}catch(e){}}}}function is(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,s=e._vModifiers;if(a(s)){if(s.number)return y(n)!==y(t);if(s.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var rs={create:ss,update:ss},os=g((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function us(e){var t=ds(e.style);return e.staticStyle?S(e.staticStyle,t):t}function ds(e){return Array.isArray(e)?M(e):"string"==typeof e?os(e):e}var ls,ps=/^--/,ys=/\s*!important$/,ms=function(e,t,n){if(ps.test(t))e.style.setProperty(t,n);else if(ys.test(n))e.style.setProperty(A(t),n.replace(ys,""),"important");else{var a=fs(t);if(Array.isArray(n))for(var s=0,i=n.length;s<i;s++)e.style[a]=n[s];else e.style[a]=n}},cs=["Webkit","Moz","ms"],fs=g((function(e){if(ls=ls||document.createElement("div").style,"filter"!==(e=w(e))&&e in ls)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<cs.length;n++){var a=cs[n]+t;if(a in ls)return a}}));function hs(e,n){var s=n.data,i=e.data;if(!(t(s.staticStyle)&&t(s.style)&&t(i.staticStyle)&&t(i.style))){var r,o,u=n.elm,d=i.staticStyle,l=i.normalizedStyle||i.style||{},p=d||l,y=ds(n.data.style)||{};n.data.normalizedStyle=a(y.__ob__)?S({},y):y;var m=function(e,t){for(var n,a={},s=e;s.componentInstance;)(s=s.componentInstance._vnode)&&s.data&&(n=us(s.data))&&S(a,n);(n=us(e.data))&&S(a,n);for(var i=e;i=i.parent;)i.data&&(n=us(i.data))&&S(a,n);return a}(n);for(o in p)t(m[o])&&ms(u,o,"");for(o in m)(r=m[o])!==p[o]&&ms(u,o,null==r?"":r)}}var bs={create:hs,update:hs},vs=/\s+/;function gs(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(vs).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Ts(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(vs).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ws(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&S(t,_s(e.name||"v")),S(t,e),t}return"string"==typeof e?_s(e):void 0}}var _s=g((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Rs=q&&!Y,As="transition",ks="animation",xs="transition",Ss="transitionend",Ms="animation",Os="animationend";Rs&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(xs="WebkitTransition",Ss="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ms="WebkitAnimation",Os="webkitAnimationEnd"));var Is=q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Cs(e){Is((function(){Is(e)}))}function Es(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),gs(e,t))}function Us(e,t){e._transitionClasses&&h(e._transitionClasses,t),Ts(e,t)}function Ps(e,t,n){var a=Ls(e,t),s=a.type,i=a.timeout,r=a.propCount;if(!s)return n();var o=s===As?Ss:Os,u=0,d=function(){e.removeEventListener(o,l),n()},l=function(t){t.target===e&&++u>=r&&d()};setTimeout((function(){u<r&&d()}),i+1),e.addEventListener(o,l)}var $s=/\b(transform|all)(,|$)/;function Ls(e,t){var n,a=window.getComputedStyle(e),s=(a[xs+"Delay"]||"").split(", "),i=(a[xs+"Duration"]||"").split(", "),r=Ds(s,i),o=(a[Ms+"Delay"]||"").split(", "),u=(a[Ms+"Duration"]||"").split(", "),d=Ds(o,u),l=0,p=0;return t===As?r>0&&(n=As,l=r,p=i.length):t===ks?d>0&&(n=ks,l=d,p=u.length):p=(n=(l=Math.max(r,d))>0?r>d?As:ks:null)?n===As?i.length:u.length:0,{type:n,timeout:l,propCount:p,hasTransform:n===As&&$s.test(a[xs+"Property"])}}function Ds(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return js(t)+js(e[n])})))}function js(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Bs(e,n){var s=e.elm;a(s._leaveCb)&&(s._leaveCb.cancelled=!0,s._leaveCb());var i=ws(e.data.transition);if(!t(i)&&!a(s._enterCb)&&1===s.nodeType){for(var o=i.css,u=i.type,d=i.enterClass,l=i.enterToClass,p=i.enterActiveClass,m=i.appearClass,c=i.appearToClass,f=i.appearActiveClass,h=i.beforeEnter,b=i.enter,v=i.afterEnter,g=i.enterCancelled,T=i.beforeAppear,w=i.appear,_=i.afterAppear,R=i.appearCancelled,A=i.duration,k=Qt,x=Qt.$vnode;x&&x.parent;)k=x.context,x=x.parent;var S=!k._isMounted||!e.isRootInsert;if(!S||w||""===w){var M=S&&m?m:d,O=S&&f?f:p,I=S&&c?c:l,C=S&&T||h,E=S&&"function"==typeof w?w:b,U=S&&_||v,$=S&&R||g,L=y(r(A)?A.enter:A),D=!1!==o&&!Y,j=Ws(E),B=s._enterCb=P((function(){D&&(Us(s,I),Us(s,O)),B.cancelled?(D&&Us(s,M),$&&$(s)):U&&U(s),s._enterCb=null}));e.data.show||dt(e,"insert",(function(){var t=s.parentNode,n=t&&t._pending&&t._pending[e.key];n&&n.tag===e.tag&&n.elm._leaveCb&&n.elm._leaveCb(),E&&E(s,B)})),C&&C(s),D&&(Es(s,M),Es(s,O),Cs((function(){Us(s,M),B.cancelled||(Es(s,I),j||(Fs(L)?setTimeout(B,L):Ps(s,u,B)))}))),e.data.show&&(n&&n(),E&&E(s,B)),D||j||B()}}}function Ns(e,n){var s=e.elm;a(s._enterCb)&&(s._enterCb.cancelled=!0,s._enterCb());var i=ws(e.data.transition);if(t(i)||1!==s.nodeType)return n();if(!a(s._leaveCb)){var o=i.css,u=i.type,d=i.leaveClass,l=i.leaveToClass,p=i.leaveActiveClass,m=i.beforeLeave,c=i.leave,f=i.afterLeave,h=i.leaveCancelled,b=i.delayLeave,v=i.duration,g=!1!==o&&!Y,T=Ws(c),w=y(r(v)?v.leave:v),_=s._leaveCb=P((function(){s.parentNode&&s.parentNode._pending&&(s.parentNode._pending[e.key]=null),g&&(Us(s,l),Us(s,p)),_.cancelled?(g&&Us(s,d),h&&h(s)):(n(),f&&f(s)),s._leaveCb=null}));b?b(R):R()}function R(){_.cancelled||(!e.data.show&&s.parentNode&&((s.parentNode._pending||(s.parentNode._pending={}))[e.key]=e),m&&m(s),g&&(Es(s,d),Es(s,p),Cs((function(){Us(s,d),_.cancelled||(Es(s,l),T||(Fs(w)?setTimeout(_,w):Ps(s,u,_)))}))),c&&c(s,_),g||T||_())}}function Fs(e){return"number"==typeof e&&!isNaN(e)}function Ws(e){if(t(e))return!1;var n=e.fns;return a(n)?Ws(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function zs(e,t){!0!==t.data.show&&Bs(t)}var Gs=function(e){var n,r,o={},u=e.modules,d=e.nodeOps;for(n=0;n<ra.length;++n)for(o[ra[n]]=[],r=0;r<u.length;++r)a(u[r][ra[n]])&&o[ra[n]].push(u[r][ra[n]]);function l(e){var t=d.parentNode(e);a(t)&&d.removeChild(t,e)}function p(e,t,n,i,r,u,l){if(a(e.elm)&&a(u)&&(e=u[l]=ve(e)),e.isRootInsert=!r,!function(e,t,n,i){var r=e.data;if(a(r)){var u=a(e.componentInstance)&&r.keepAlive;if(a(r=r.hook)&&a(r=r.init)&&r(e,!1),a(e.componentInstance))return y(e,t),c(n,e.elm,i),s(u)&&function(e,t,n,s){for(var i,r=e;r.componentInstance;)if(a(i=(r=r.componentInstance._vnode).data)&&a(i=i.transition)){for(i=0;i<o.activate.length;++i)o.activate[i](ia,r);t.push(r);break}c(n,e.elm,s)}(e,t,n,i),!0}}(e,t,n,i)){var p=e.data,m=e.children,h=e.tag;a(h)?(e.elm=e.ns?d.createElementNS(e.ns,h):d.createElement(h,e),v(e),f(e,m,t),a(p)&&b(e,t),c(n,e.elm,i)):s(e.isComment)?(e.elm=d.createComment(e.text),c(n,e.elm,i)):(e.elm=d.createTextNode(e.text),c(n,e.elm,i))}}function y(e,t){a(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(b(e,t),v(e)):(sa(e),t.push(e))}function c(e,t,n){a(e)&&(a(n)?d.parentNode(n)===e&&d.insertBefore(e,t,n):d.appendChild(e,t))}function f(e,t,n){if(Array.isArray(t))for(var a=0;a<t.length;++a)p(t[a],n,e.elm,null,!0,t,a);else i(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function b(e,t){for(var s=0;s<o.create.length;++s)o.create[s](ia,e);a(n=e.data.hook)&&(a(n.create)&&n.create(ia,e),a(n.insert)&&t.push(e))}function v(e){var t;if(a(t=e.fnScopeId))d.setStyleScope(e.elm,t);else for(var n=e;n;)a(t=n.context)&&a(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t),n=n.parent;a(t=Qt)&&t!==e.context&&t!==e.fnContext&&a(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t)}function g(e,t,n,a,s,i){for(;a<=s;++a)p(n[a],i,e,t,!1,n,a)}function T(e){var t,n,s=e.data;if(a(s))for(a(t=s.hook)&&a(t=t.destroy)&&t(e),t=0;t<o.destroy.length;++t)o.destroy[t](e);if(a(t=e.children))for(n=0;n<e.children.length;++n)T(e.children[n])}function w(e,t,n){for(;t<=n;++t){var s=e[t];a(s)&&(a(s.tag)?(_(s),T(s)):l(s.elm))}}function _(e,t){if(a(t)||a(e.data)){var n,s=o.remove.length+1;for(a(t)?t.listeners+=s:t=function(e,t){function n(){0==--n.listeners&&l(e)}return n.listeners=t,n}(e.elm,s),a(n=e.componentInstance)&&a(n=n._vnode)&&a(n.data)&&_(n,t),n=0;n<o.remove.length;++n)o.remove[n](e,t);a(n=e.data.hook)&&a(n=n.remove)?n(e,t):t()}else l(e.elm)}function R(e,t,n,s){for(var i=n;i<s;i++){var r=t[i];if(a(r)&&oa(e,r))return i}}function A(e,n,i,r,u,l){if(e!==n){a(n.elm)&&a(r)&&(n=r[u]=ve(n));var y=n.elm=e.elm;if(s(e.isAsyncPlaceholder))a(n.asyncFactory.resolved)?S(e.elm,n,i):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var m,c=n.data;a(c)&&a(m=c.hook)&&a(m=m.prepatch)&&m(e,n);var f=e.children,b=n.children;if(a(c)&&h(n)){for(m=0;m<o.update.length;++m)o.update[m](e,n);a(m=c.hook)&&a(m=m.update)&&m(e,n)}t(n.text)?a(f)&&a(b)?f!==b&&function(e,n,s,i,r){for(var o,u,l,y=0,m=0,c=n.length-1,f=n[0],h=n[c],b=s.length-1,v=s[0],T=s[b],_=!r;y<=c&&m<=b;)t(f)?f=n[++y]:t(h)?h=n[--c]:oa(f,v)?(A(f,v,i,s,m),f=n[++y],v=s[++m]):oa(h,T)?(A(h,T,i,s,b),h=n[--c],T=s[--b]):oa(f,T)?(A(f,T,i,s,b),_&&d.insertBefore(e,f.elm,d.nextSibling(h.elm)),f=n[++y],T=s[--b]):oa(h,v)?(A(h,v,i,s,m),_&&d.insertBefore(e,h.elm,f.elm),h=n[--c],v=s[++m]):(t(o)&&(o=ua(n,y,c)),t(u=a(v.key)?o[v.key]:R(v,n,y,c))?p(v,i,e,f.elm,!1,s,m):oa(l=n[u],v)?(A(l,v,i,s,m),n[u]=void 0,_&&d.insertBefore(e,l.elm,f.elm)):p(v,i,e,f.elm,!1,s,m),v=s[++m]);y>c?g(e,t(s[b+1])?null:s[b+1].elm,s,m,b,i):m>b&&w(n,y,c)}(y,f,b,i,l):a(b)?(a(e.text)&&d.setTextContent(y,""),g(y,null,b,0,b.length-1,i)):a(f)?w(f,0,f.length-1):a(e.text)&&d.setTextContent(y,""):e.text!==n.text&&d.setTextContent(y,n.text),a(c)&&a(m=c.hook)&&a(m=m.postpatch)&&m(e,n)}}}function k(e,t,n){if(s(n)&&a(e.parent))e.parent.data.pendingInsert=t;else for(var i=0;i<t.length;++i)t[i].data.hook.insert(t[i])}var x=m("attrs,class,staticClass,staticStyle,key");function S(e,t,n,i){var r,o=t.tag,u=t.data,d=t.children;if(i=i||u&&u.pre,t.elm=e,s(t.isComment)&&a(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(a(u)&&(a(r=u.hook)&&a(r=r.init)&&r(t,!0),a(r=t.componentInstance)))return y(t,n),!0;if(a(o)){if(a(d))if(e.hasChildNodes())if(a(r=u)&&a(r=r.domProps)&&a(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var l=!0,p=e.firstChild,m=0;m<d.length;m++){if(!p||!S(p,d[m],n,i)){l=!1;break}p=p.nextSibling}if(!l||p)return!1}else f(t,d,n);if(a(u)){var c=!1;for(var h in u)if(!x(h)){c=!0,b(t,n);break}!c&&u.class&&st(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,n,i,r){if(!t(n)){var u,l=!1,y=[];if(t(e))l=!0,p(n,y);else{var m=a(e.nodeType);if(!m&&oa(e,n))A(e,n,y,null,null,r);else{if(m){if(1===e.nodeType&&e.hasAttribute($)&&(e.removeAttribute($),i=!0),s(i)&&S(e,n,y))return k(n,y,!0),e;u=e,e=new ce(d.tagName(u).toLowerCase(),{},[],void 0,u)}var c=e.elm,f=d.parentNode(c);if(p(n,y,c._leaveCb?null:f,d.nextSibling(c)),a(n.parent))for(var b=n.parent,v=h(n);b;){for(var g=0;g<o.destroy.length;++g)o.destroy[g](b);if(b.elm=n.elm,v){for(var _=0;_<o.create.length;++_)o.create[_](ia,b);var R=b.data.hook.insert;if(R.merged)for(var x=1;x<R.fns.length;x++)R.fns[x]()}else sa(b);b=b.parent}a(f)?w([e],0,0):a(e.tag)&&T(e)}}return k(n,y,l),n.elm}a(e)&&T(e)}}({nodeOps:na,modules:[ga,Sa,as,rs,bs,q?{create:zs,activate:zs,remove:function(e,t){!0!==e.data.show?Ns(e,t):t()}}:{}].concat(fa)});Y&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Xs(e,"input")}));var qs={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?dt(n,"postpatch",(function(){qs.componentUpdated(e,t,n)})):Hs(e,t,n.context),e._vOptions=[].map.call(e.options,Ks)):("textarea"===n.tag||ea(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Ys),e.addEventListener("compositionend",Zs),e.addEventListener("change",Zs),Y&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Hs(e,t,n.context);var a=e._vOptions,s=e._vOptions=[].map.call(e.options,Ks);s.some((function(e,t){return!E(e,a[t])}))&&(e.multiple?t.value.some((function(e){return Js(e,s)})):t.value!==t.oldValue&&Js(t.value,s))&&Xs(e,"change")}}};function Hs(e,t,n){Vs(e,t),(K||Z)&&setTimeout((function(){Vs(e,t)}),0)}function Vs(e,t,n){var a=t.value,s=e.multiple;if(!s||Array.isArray(a)){for(var i,r,o=0,u=e.options.length;o<u;o++)if(r=e.options[o],s)i=U(a,Ks(r))>-1,r.selected!==i&&(r.selected=i);else if(E(Ks(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));s||(e.selectedIndex=-1)}}function Js(e,t){return t.every((function(t){return!E(t,e)}))}function Ks(e){return"_value"in e?e._value:e.value}function Ys(e){e.target.composing=!0}function Zs(e){e.target.composing&&(e.target.composing=!1,Xs(e.target,"input"))}function Xs(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Qs(e){return!e.componentInstance||e.data&&e.data.transition?e:Qs(e.componentInstance._vnode)}var ei={bind:function(e,t,n){var a=t.value,s=(n=Qs(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&s?(n.data.show=!0,Bs(n,(function(){e.style.display=i}))):e.style.display=a?i:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=Qs(n)).data&&n.data.transition?(n.data.show=!0,a?Bs(n,(function(){e.style.display=e.__vOriginalDisplay})):Ns(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,s){s||(e.style.display=e.__vOriginalDisplay)}},ti={model:qs,show:ei},ni={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ai(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?ai(Jt(t.children)):e}function si(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var s=n._parentListeners;for(var i in s)t[w(i)]=s[i];return t}function ii(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ri=function(e){return e.tag||bt(e)},oi=function(e){return"show"===e.name},ui={name:"transition",props:ni,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ri)).length){var a=this.mode,s=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return s;var r=ai(s);if(!r)return s;if(this._leaving)return ii(e,s);var o="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?o+"comment":o+r.tag:i(r.key)?0===String(r.key).indexOf(o)?r.key:o+r.key:r.key;var u=(r.data||(r.data={})).transition=si(this),d=this._vnode,l=ai(d);if(r.data.directives&&r.data.directives.some(oi)&&(r.data.show=!0),l&&l.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,l)&&!bt(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var p=l.data.transition=S({},u);if("out-in"===a)return this._leaving=!0,dt(p,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),ii(e,s);if("in-out"===a){if(bt(r))return d;var y,m=function(){y()};dt(u,"afterEnter",m),dt(u,"enterCancelled",m),dt(p,"delayLeave",(function(e){y=e}))}}return s}}},di=S({tag:String,moveClass:String},ni);delete di.mode;var li={props:di,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var s=en(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,s(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,s=this.$slots.default||[],i=this.children=[],r=si(this),o=0;o<s.length;o++){var u=s[o];u.tag&&null!=u.key&&0!==String(u.key).indexOf("__vlist")&&(i.push(u),n[u.key]=u,(u.data||(u.data={})).transition=r)}if(a){for(var d=[],l=[],p=0;p<a.length;p++){var y=a[p];y.data.transition=r,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?d.push(y):l.push(y)}this.kept=e(t,null,d),this.removed=l}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(pi),e.forEach(yi),e.forEach(mi),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Es(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Ss,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Ss,e),n._moveCb=null,Us(n,t))})}})))},methods:{hasMove:function(e,t){if(!Rs)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Ts(n,e)})),gs(n,t),n.style.display="none",this.$el.appendChild(n);var a=Ls(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function pi(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function yi(e){e.data.newPos=e.elm.getBoundingClientRect()}function mi(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,s=t.top-n.top;if(a||s){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+a+"px,"+s+"px)",i.transitionDuration="0s"}}var ci={Transition:ui,TransitionGroup:li};Sn.config.mustUseProp=Dn,Sn.config.isReservedTag=Zn,Sn.config.isReservedAttr=$n,Sn.config.getTagNamespace=Xn,Sn.config.isUnknownElement=function(e){if(!q)return!0;if(Zn(e))return!1;if(e=e.toLowerCase(),null!=Qn[e])return Qn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Qn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Qn[e]=/HTMLUnknownElement/.test(t.toString())},S(Sn.options.directives,ti),S(Sn.options.components,ci),Sn.prototype.__patch__=q?Gs:O,Sn.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=he),sn(e,"beforeMount"),a=function(){e._update(e._render(),n)},new bn(e,a,O,{before:function(){e._isMounted&&!e._isDestroyed&&sn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,sn(e,"mounted")),e}(this,e=e&&q?ta(e):void 0,t)},q&&setTimeout((function(){j.devtools&&se&&se.emit("init",Sn)}),0);var fi,hi=/\{\{((?:.|\r?\n)+?)\}\}/g,bi=/[-.*+?^${}()|[\]\/\\]/g,vi=g((function(e){var t=e[0].replace(bi,"\\$&"),n=e[1].replace(bi,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),gi={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=Na(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=Ba(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}},Ti={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=Na(e,"style");n&&(e.staticStyle=JSON.stringify(os(n)));var a=Ba(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},wi=m("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),_i=m("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Ri=m("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Ai=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,ki=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,xi="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+B.source+"]*",Si="((?:"+xi+"\\:)?"+xi+")",Mi=new RegExp("^<"+Si),Oi=/^\s*(\/?)>/,Ii=new RegExp("^<\\/"+Si+"[^>]*>"),Ci=/^<!DOCTYPE [^>]+>/i,Ei=/^<!\--/,Ui=/^<!\[/,Pi=m("script,style,textarea",!0),$i={},Li={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Di=/&(?:lt|gt|quot|amp|#39);/g,ji=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Bi=m("pre,textarea",!0),Ni=function(e,t){return e&&Bi(e)&&"\n"===t[0]};function Fi(e,t){var n=t?ji:Di;return e.replace(n,(function(e){return Li[e]}))}var Wi,zi,Gi,qi,Hi,Vi,Ji,Ki,Yi=/^@|^v-on:/,Zi=/^v-|^@|^:|^#/,Xi=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Qi=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,er=/^\(|\)$/g,tr=/^\[.*\]$/,nr=/:(.*)$/,ar=/^:|^\.|^v-bind:/,sr=/\.[^.\]]+(?=[^\]]*$)/g,ir=/^v-slot(:|$)|^#/,rr=/[\r\n]/,or=/[ \f\t\r\n]+/g,ur=g((function(e){return(fi=fi||document.createElement("div")).innerHTML=e,fi.textContent})),dr="_empty_";function lr(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:hr(t),rawAttrsMap:{},parent:n,children:[]}}function pr(e,t){var n;!function(e){var t=Ba(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Ba(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=Na(e,"scope"),e.slotScope=t||Na(e,"slot-scope")):(t=Na(e,"slot-scope"))&&(e.slotScope=t);var n=Ba(e,"slot");if(n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Pa(e,"slot",n,function(e,t){return e.rawAttrsMap[":slot"]||e.rawAttrsMap["v-bind:slot"]||e.rawAttrsMap.slot}(e))),"template"===e.tag){var a=Fa(e,ir);if(a){var s=cr(a),i=s.name,r=s.dynamic;e.slotTarget=i,e.slotTargetDynamic=r,e.slotScope=a.value||dr}}else{var o=Fa(e,ir);if(o){var u=e.scopedSlots||(e.scopedSlots={}),d=cr(o),l=d.name,p=d.dynamic,y=u[l]=lr("template",[],e);y.slotTarget=l,y.slotTargetDynamic=p,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=o.value||dr,e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=Ba(n,"name")),function(e){var t;(t=Ba(e,"is"))&&(e.component=t),null!=Na(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<Gi.length;a++)e=Gi[a](e,t)||e;return function(e){var t,n,a,s,i,r,o,u,d=e.attrsList;for(t=0,n=d.length;t<n;t++)if(a=s=d[t].name,i=d[t].value,Zi.test(a))if(e.hasBindings=!0,(r=fr(a.replace(Zi,"")))&&(a=a.replace(sr,"")),ar.test(a))a=a.replace(ar,""),i=Oa(i),(u=tr.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!u&&"innerHtml"===(a=w(a))&&(a="innerHTML"),r.camel&&!u&&(a=w(a)),r.sync&&(o=Ga(i,"$event"),u?ja(e,'"update:"+('+a+")",o,null,!1,0,d[t],!0):(ja(e,"update:"+w(a),o,null,!1,0,d[t]),A(a)!==w(a)&&ja(e,"update:"+A(a),o,null,!1,0,d[t])))),r&&r.prop||!e.component&&Ji(e.tag,e.attrsMap.type,a)?Ua(e,a,i,d[t],u):Pa(e,a,i,d[t],u);else if(Yi.test(a))a=a.replace(Yi,""),(u=tr.test(a))&&(a=a.slice(1,-1)),ja(e,a,i,r,!1,0,d[t],u);else{var l=(a=a.replace(Zi,"")).match(nr),p=l&&l[1];u=!1,p&&(a=a.slice(0,-(p.length+1)),tr.test(p)&&(p=p.slice(1,-1),u=!0)),La(e,a,s,i,p,u,r,d[t])}else Pa(e,a,JSON.stringify(i),d[t]),!e.component&&"muted"===a&&Ji(e.tag,e.attrsMap.type,a)&&Ua(e,a,"true",d[t])}(e),e}function yr(e){var t;if(t=Na(e,"v-for")){var n=function(e){var t=e.match(Xi);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(er,""),s=a.match(Qi);return s?(n.alias=a.replace(Qi,"").trim(),n.iterator1=s[1].trim(),s[2]&&(n.iterator2=s[2].trim())):n.alias=a,n}}(t);n&&S(e,n)}}function mr(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function cr(e){var t=e.name.replace(ir,"");return t||"#"!==e.name[0]&&(t="default"),tr.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function fr(e){var t=e.match(sr);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function hr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var br=/^xmlns:NS\d+/,vr=/^NS\d+:/;function gr(e){return lr(e.tag,e.attrsList.slice(),e.parent)}var Tr,wr,_r,Rr=[gi,Ti,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=Ba(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var s=Na(e,"v-if",!0),i=s?"&&("+s+")":"",r=null!=Na(e,"v-else",!0),o=Na(e,"v-else-if",!0),u=gr(e);yr(u),$a(u,"type","checkbox"),pr(u,t),u.processed=!0,u.if="("+n+")==='checkbox'"+i,mr(u,{exp:u.if,block:u});var d=gr(e);Na(d,"v-for",!0),$a(d,"type","radio"),pr(d,t),mr(u,{exp:"("+n+")==='radio'"+i,block:d});var l=gr(e);return Na(l,"v-for",!0),$a(l,":type",n),pr(l,t),mr(u,{exp:s,block:l}),r?u.else=!0:o&&(u.elseif=o),u}}}}],Ar={model:function(e,t,n){var a=t.value,s=t.modifiers,i=e.tag,r=e.attrsMap.type;if(e.component)return za(e,a,s),!1;if("select"===i)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";ja(e,"change",a=a+" "+Ga(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),null,!0)}(e,a,s);else if("input"===i&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,s=Ba(e,"value")||"null",i=Ba(e,"true-value")||"true",r=Ba(e,"false-value")||"false";Ua(e,"checked","Array.isArray("+t+")?_i("+t+","+s+")>-1"+("true"===i?":("+t+")":":_q("+t+","+i+")")),ja(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+i+"):("+r+");if(Array.isArray($$a)){var $$v="+(a?"_n("+s+")":s)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Ga(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Ga(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Ga(t,"$$c")+"}",null,!0)}(e,a,s);else if("input"===i&&"radio"===r)!function(e,t,n){var a=n&&n.number,s=Ba(e,"value")||"null";Ua(e,"checked","_q("+t+","+(s=a?"_n("+s+")":s)+")"),ja(e,"change",Ga(t,s),null,!0)}(e,a,s);else if("input"===i||"textarea"===i)!function(e,t,n){var a=e.attrsMap.type,s=n||{},i=s.lazy,r=s.number,o=s.trim,u=!i&&"range"!==a,d=i?"change":"range"===a?"__r":"input",l="$event.target.value";o&&(l="$event.target.value.trim()"),r&&(l="_n("+l+")");var p=Ga(t,l);u&&(p="if($event.target.composing)return;"+p),Ua(e,"value","("+t+")"),ja(e,d,p,null,!0),(o||r)&&ja(e,"blur","$forceUpdate()")}(e,a,s);else if(!j.isReservedTag(i))return za(e,a,s),!1;return!0},text:function(e,t){t.value&&Ua(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Ua(e,"innerHTML","_s("+t.value+")",t)}},kr={expectHTML:!0,modules:Rr,directives:Ar,isPreTag:function(e){return"pre"===e},isUnaryTag:wi,mustUseProp:Dn,canBeLeftOpenTag:_i,isReservedTag:Zn,getTagNamespace:Xn,staticKeys:(_r=Rr,_r.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(","))},xr=g((function(e){return m("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function Sr(e,t){e&&(Tr=xr(t.staticKeys||""),wr=t.isReservedTag||I,Mr(e),Or(e,!1))}function Mr(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||c(e.tag)||!wr(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(Tr))))}(e),1===e.type){if(!wr(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Mr(a),a.static||(e.static=!1)}if(e.ifConditions)for(var s=1,i=e.ifConditions.length;s<i;s++){var r=e.ifConditions[s].block;Mr(r),r.static||(e.static=!1)}}}function Or(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Or(e.children[n],t||!!e.for);if(e.ifConditions)for(var s=1,i=e.ifConditions.length;s<i;s++)Or(e.ifConditions[s].block,t)}}var Ir=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Cr=/\([^)]*?\);*$/,Er=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Ur={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Pr={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},$r=function(e){return"if("+e+")return null;"},Lr={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:$r("$event.target !== $event.currentTarget"),ctrl:$r("!$event.ctrlKey"),shift:$r("!$event.shiftKey"),alt:$r("!$event.altKey"),meta:$r("!$event.metaKey"),left:$r("'button' in $event && $event.button !== 0"),middle:$r("'button' in $event && $event.button !== 1"),right:$r("'button' in $event && $event.button !== 2")};function Dr(e,t){var n=t?"nativeOn:":"on:",a="",s="";for(var i in e){var r=jr(e[i]);e[i]&&e[i].dynamic?s+=i+","+r+",":a+='"'+i+'":'+r+","}return a="{"+a.slice(0,-1)+"}",s?n+"_d("+a+",["+s.slice(0,-1)+"])":n+a}function jr(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return jr(e)})).join(",")+"]";var t=Er.test(e.value),n=Ir.test(e.value),a=Er.test(e.value.replace(Cr,""));if(e.modifiers){var s="",i="",r=[];for(var o in e.modifiers)if(Lr[o])i+=Lr[o],Ur[o]&&r.push(o);else if("exact"===o){var u=e.modifiers;i+=$r(["ctrl","shift","alt","meta"].filter((function(e){return!u[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else r.push(o);return r.length&&(s+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Br).join("&&")+")return null;"}(r)),i&&(s+=i),"function($event){"+s+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function Br(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Ur[e],a=Pr[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var Nr={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:O},Fr=function(e){this.options=e,this.warn=e.warn||Ca,this.transforms=Ea(e.modules,"transformCode"),this.dataGenFns=Ea(e.modules,"genData"),this.directives=S(S({},Nr),e.directives);var t=e.isReservedTag||I;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Wr(e,t){var n=new Fr(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":zr(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function zr(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Gr(e,t);if(e.once&&!e.onceProcessed)return qr(e,t);if(e.for&&!e.forProcessed)return Jr(e,t);if(e.if&&!e.ifProcessed)return Hr(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=Xr(e,t),s="_t("+n+(a?",function(){return "+a+"}":""),i=e.attrs||e.dynamicAttrs?to((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:w(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];return!i&&!r||a||(s+=",null"),i&&(s+=","+i),r&&(s+=(i?"":",null")+","+r),s+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:Xr(t,n,!0);return"_c("+e+","+Kr(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=Kr(e,t));var s=e.inlineTemplate?null:Xr(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(s?","+s:"")+")"}for(var i=0;i<t.transforms.length;i++)n=t.transforms[i](e,n);return n}return Xr(e,t)||"void 0"}function Gr(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+zr(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function qr(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Hr(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+zr(e,t)+","+t.onceId+++","+n+")":zr(e,t)}return Gr(e,t)}function Hr(e,t,n,a){return e.ifProcessed=!0,Vr(e.ifConditions.slice(),t,n,a)}function Vr(e,t,n,a){if(!e.length)return a||"_e()";var s=e.shift();return s.exp?"("+s.exp+")?"+i(s.block)+":"+Vr(e,t,n,a):""+i(s.block);function i(e){return n?n(e,t):e.once?qr(e,t):zr(e,t)}}function Jr(e,t,n,a){var s=e.for,i=e.alias,r=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+s+"),function("+i+r+o+"){return "+(n||zr)(e,t)+"})"}function Kr(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,s,i,r,o="directives:[",u=!1;for(a=0,s=n.length;a<s;a++){i=n[a],r=!0;var d=t.directives[i.name];d&&(r=!!d(e,i,t.warn)),r&&(u=!0,o+='{name:"'+i.name+'",rawName:"'+i.rawName+'"'+(i.value?",value:("+i.value+"),expression:"+JSON.stringify(i.value):"")+(i.arg?",arg:"+(i.isDynamicArg?i.arg:'"'+i.arg+'"'):"")+(i.modifiers?",modifiers:"+JSON.stringify(i.modifiers):"")+"},")}return u?o.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var s=0;s<t.dataGenFns.length;s++)n+=t.dataGenFns[s](e);if(e.attrs&&(n+="attrs:"+to(e.attrs)+","),e.props&&(n+="domProps:"+to(e.props)+","),e.events&&(n+=Dr(e.events,!1)+","),e.nativeEvents&&(n+=Dr(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Yr(n)})),s=!!e.if;if(!a)for(var i=e.parent;i;){if(i.slotScope&&i.slotScope!==dr||i.for){a=!0;break}i.if&&(s=!0),i=i.parent}var r=Object.keys(t).map((function(e){return Zr(t[e],n)})).join(",");return"scopedSlots:_u(["+r+"]"+(a?",null,true":"")+(!a&&s?",null,false,"+function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var i=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=Wr(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);i&&(n+=i+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+to(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Yr(e){return 1===e.type&&("slot"===e.tag||e.children.some(Yr))}function Zr(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Hr(e,t,Zr,"null");if(e.for&&!e.forProcessed)return Jr(e,t,Zr);var a=e.slotScope===dr?"":String(e.slotScope),s="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(Xr(e,t)||"undefined")+":undefined":Xr(e,t)||"undefined":zr(e,t))+"}",i=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+s+i+"}"}function Xr(e,t,n,a,s){var i=e.children;if(i.length){var r=i[0];if(1===i.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return""+(a||zr)(r,t)+o}var u=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var s=e[a];if(1===s.type){if(Qr(s)||s.ifConditions&&s.ifConditions.some((function(e){return Qr(e.block)}))){n=2;break}(t(s)||s.ifConditions&&s.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(i,t.maybeComponent):0,d=s||eo;return"["+i.map((function(e){return d(e,t)})).join(",")+"]"+(u?","+u:"")}}function Qr(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function eo(e,t){return 1===e.type?zr(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):"_v("+(2===(n=e).type?n.expression:no(JSON.stringify(n.text)))+")";var n}function to(e){for(var t="",n="",a=0;a<e.length;a++){var s=e[a],i=no(s.value);s.dynamic?n+=s.name+","+i+",":t+='"'+s.name+'":'+i+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function no(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function ao(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),O}}function so(e){var t=Object.create(null);return function(n,a,s){(a=S({},a)).warn,delete a.warn;var i=a.delimiters?String(a.delimiters)+n:n;if(t[i])return t[i];var r=e(n,a),o={},u=[];return o.render=ao(r.render,u),o.staticRenderFns=r.staticRenderFns.map((function(e){return ao(e,u)})),t[i]=o}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var io,ro,oo=(io=function(e,t){var n=function(e,t){Wi=t.warn||Ca,Vi=t.isPreTag||I,Ji=t.mustUseProp||I,Ki=t.getTagNamespace||I,t.isReservedTag,Gi=Ea(t.modules,"transformNode"),qi=Ea(t.modules,"preTransformNode"),Hi=Ea(t.modules,"postTransformNode"),zi=t.delimiters;var n,a,s=[],i=!1!==t.preserveWhitespace,r=t.whitespace,o=!1,u=!1;function d(e){if(l(e),o||e.processed||(e=pr(e,t)),s.length||e===n||n.if&&(e.elseif||e.else)&&mr(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)r=e,d=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),d&&d.if&&mr(d,{exp:r.elseif,block:r});else{if(e.slotScope){var i=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[i]=e}a.children.push(e),e.parent=a}var r,d;e.children=e.children.filter((function(e){return!e.slotScope})),l(e),e.pre&&(o=!1),Vi(e.tag)&&(u=!1);for(var p=0;p<Hi.length;p++)Hi[p](e,t)}function l(e){if(!u)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,s=[],i=t.expectHTML,r=t.isUnaryTag||I,o=t.canBeLeftOpenTag||I,u=0;e;){if(n=e,a&&Pi(a)){var d=0,l=a.toLowerCase(),p=$i[l]||($i[l]=new RegExp("([\\s\\S]*?)(</"+l+"[^>]*>)","i")),y=e.replace(p,(function(e,n,a){return d=a.length,Pi(l)||"noscript"===l||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Ni(l,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));u+=e.length-y.length,e=y,x(l,u-d,u)}else{var m=e.indexOf("<");if(0===m){if(Ei.test(e)){var c=e.indexOf("--\x3e");if(c>=0){t.shouldKeepComment&&t.comment(e.substring(4,c),u,u+c+3),R(c+3);continue}}if(Ui.test(e)){var f=e.indexOf("]>");if(f>=0){R(f+2);continue}}var h=e.match(Ci);if(h){R(h[0].length);continue}var b=e.match(Ii);if(b){var v=u;R(b[0].length),x(b[1],v,u);continue}var g=A();if(g){k(g),Ni(g.tagName,e)&&R(1);continue}}var T=void 0,w=void 0,_=void 0;if(m>=0){for(w=e.slice(m);!(Ii.test(w)||Mi.test(w)||Ei.test(w)||Ui.test(w)||(_=w.indexOf("<",1))<0);)m+=_,w=e.slice(m);T=e.substring(0,m)}m<0&&(T=e),T&&R(T.length),t.chars&&T&&t.chars(T,u-T.length,u)}if(e===n){t.chars&&t.chars(e);break}}function R(t){u+=t,e=e.substring(t)}function A(){var t=e.match(Mi);if(t){var n,a,s={tagName:t[1],attrs:[],start:u};for(R(t[0].length);!(n=e.match(Oi))&&(a=e.match(ki)||e.match(Ai));)a.start=u,R(a[0].length),a.end=u,s.attrs.push(a);if(n)return s.unarySlash=n[1],R(n[0].length),s.end=u,s}}function k(e){var n=e.tagName,u=e.unarySlash;i&&("p"===a&&Ri(n)&&x(a),o(n)&&a===n&&x(n));for(var d=r(n)||!!u,l=e.attrs.length,p=new Array(l),y=0;y<l;y++){var m=e.attrs[y],c=m[3]||m[4]||m[5]||"",f="a"===n&&"href"===m[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;p[y]={name:m[1],value:Fi(c,f)}}d||(s.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:p,start:e.start,end:e.end}),a=n),t.start&&t.start(n,p,d,e.start,e.end)}function x(e,n,i){var r,o;if(null==n&&(n=u),null==i&&(i=u),e)for(o=e.toLowerCase(),r=s.length-1;r>=0&&s[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var d=s.length-1;d>=r;d--)t.end&&t.end(s[d].tag,n,i);s.length=r,a=r&&s[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,i):"p"===o&&(t.start&&t.start(e,[],!1,n,i),t.end&&t.end(e,n,i))}x()}(e,{warn:Wi,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,i,r,l,p){var y=a&&a.ns||Ki(e);K&&"svg"===y&&(i=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];br.test(a.name)||(a.name=a.name.replace(vr,""),t.push(a))}return t}(i));var m,c=lr(e,i,a);y&&(c.ns=y),"style"!==(m=c).tag&&("script"!==m.tag||m.attrsMap.type&&"text/javascript"!==m.attrsMap.type)||ae()||(c.forbidden=!0);for(var f=0;f<qi.length;f++)c=qi[f](c,t)||c;o||(function(e){null!=Na(e,"v-pre")&&(e.pre=!0)}(c),c.pre&&(o=!0)),Vi(c.tag)&&(u=!0),o?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),s=0;s<n;s++)a[s]={name:t[s].name,value:JSON.stringify(t[s].value)},null!=t[s].start&&(a[s].start=t[s].start,a[s].end=t[s].end);else e.pre||(e.plain=!0)}(c):c.processed||(yr(c),function(e){var t=Na(e,"v-if");if(t)e.if=t,mr(e,{exp:t,block:e});else{null!=Na(e,"v-else")&&(e.else=!0);var n=Na(e,"v-else-if");n&&(e.elseif=n)}}(c),function(e){null!=Na(e,"v-once")&&(e.once=!0)}(c)),n||(n=c),r?d(c):(a=c,s.push(c))},end:function(e,t,n){var i=s[s.length-1];s.length-=1,a=s[s.length-1],d(i)},chars:function(e,t,n){if(a&&(!K||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var s,d,l,p=a.children;(e=u||e.trim()?"script"===(s=a).tag||"style"===s.tag?e:ur(e):p.length?r?"condense"===r&&rr.test(e)?"":" ":i?" ":"":"")&&(u||"condense"!==r||(e=e.replace(or," ")),!o&&" "!==e&&(d=function(e,t){var n=t?vi(t):hi;if(n.test(e)){for(var a,s,i,r=[],o=[],u=n.lastIndex=0;a=n.exec(e);){(s=a.index)>u&&(o.push(i=e.slice(u,s)),r.push(JSON.stringify(i)));var d=Oa(a[1].trim());r.push("_s("+d+")"),o.push({"@binding":d}),u=s+a[0].length}return u<e.length&&(o.push(i=e.slice(u)),r.push(JSON.stringify(i))),{expression:r.join("+"),tokens:o}}}(e,zi))?l={type:2,expression:d.expression,tokens:d.tokens,text:e}:" "===e&&p.length&&" "===p[p.length-1].text||(l={type:3,text:e}),l&&p.push(l))}},comment:function(e,t,n){if(a){var s={type:3,text:e,isComment:!0};a.children.push(s)}}}),n}(e.trim(),t);!1!==t.optimize&&Sr(n,t);var a=Wr(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),s=[],i=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=S(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?i:s).push(e)};var o=io(t.trim(),a);return o.errors=s,o.tips=i,o}return{compile:t,compileToFunctions:so(t)}}),uo=oo(kr),lo=(uo.compile,uo.compileToFunctions);function po(e){return(ro=ro||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',ro.innerHTML.indexOf("&#10;")>0}var yo=!!q&&po(!1),mo=!!q&&po(!0),co=g((function(e){var t=ta(e);return t&&t.innerHTML})),fo=Sn.prototype.$mount;Sn.prototype.$mount=function(e,t){if((e=e&&ta(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=co(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var s=lo(a,{outputSourceRange:!1,shouldDecodeNewlines:yo,shouldDecodeNewlinesForHref:mo,delimiters:n.delimiters,comments:n.comments},this),i=s.render,r=s.staticRenderFns;n.render=i,n.staticRenderFns=r}}return fo.call(this,e,t)},Sn.compile=lo;const ho=Sn;function bo(e,t){for(var n in t)e[n]=t[n];return e}var vo=/[!'()*]/g,go=function(e){return"%"+e.charCodeAt(0).toString(16)},To=/%2C/g,wo=function(e){return encodeURIComponent(e).replace(vo,go).replace(To,",")};function _o(e){try{return decodeURIComponent(e)}catch(e){}return e}var Ro=function(e){return null==e||"object"==typeof e?e:String(e)};function Ao(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=_o(n.shift()),s=n.length>0?_o(n.join("=")):null;void 0===t[a]?t[a]=s:Array.isArray(t[a])?t[a].push(s):t[a]=[t[a],s]})),t):t}function ko(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return wo(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(wo(t)):a.push(wo(t)+"="+wo(e)))})),a.join("&")}return wo(t)+"="+wo(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var xo=/\/?$/;function So(e,t,n,a){var s=a&&a.options.stringifyQuery,i=t.query||{};try{i=Mo(i)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:Co(t,s),matched:e?Io(e):[]};return n&&(r.redirectedFrom=Co(n,s)),Object.freeze(r)}function Mo(e){if(Array.isArray(e))return e.map(Mo);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Mo(e[n]);return t}return e}var Oo=So(null,{path:"/"});function Io(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Co(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var s=e.hash;return void 0===s&&(s=""),(n||"/")+(t||ko)(a)+s}function Eo(e,t,n){return t===Oo?e===t:!!t&&(e.path&&t.path?e.path.replace(xo,"")===t.path.replace(xo,"")&&(n||e.hash===t.hash&&Uo(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&Uo(e.query,t.query)&&Uo(e.params,t.params)))}function Uo(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,s){var i=e[n];if(a[s]!==n)return!1;var r=t[n];return null==i||null==r?i===r:"object"==typeof i&&"object"==typeof r?Uo(i,r):String(i)===String(r)}))}function Po(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var s=n.instances[a],i=n.enteredCbs[a];if(s&&i){delete n.enteredCbs[a];for(var r=0;r<i.length;r++)s._isBeingDestroyed||i[r](s)}}}}var $o={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,s=t.parent,i=t.data;i.routerView=!0;for(var r=s.$createElement,o=n.name,u=s.$route,d=s._routerViewCache||(s._routerViewCache={}),l=0,p=!1;s&&s._routerRoot!==s;){var y=s.$vnode?s.$vnode.data:{};y.routerView&&l++,y.keepAlive&&s._directInactive&&s._inactive&&(p=!0),s=s.$parent}if(i.routerViewDepth=l,p){var m=d[o],c=m&&m.component;return c?(m.configProps&&Lo(c,i,m.route,m.configProps),r(c,i,a)):r()}var f=u.matched[l],h=f&&f.components[o];if(!f||!h)return d[o]=null,r();d[o]={component:h},i.registerRouteInstance=function(e,t){var n=f.instances[o];(t&&n!==e||!t&&n===e)&&(f.instances[o]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){f.instances[o]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[o]&&(f.instances[o]=e.componentInstance),Po(u)};var b=f.props&&f.props[o];return b&&(bo(d[o],{route:u,configProps:b}),Lo(h,i,u,b)),r(h,i,a)}};function Lo(e,t,n,a){var s=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(s){s=t.props=bo({},s);var i=t.attrs=t.attrs||{};for(var r in s)e.props&&r in e.props||(i[r]=s[r],delete s[r])}}function Do(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var s=t.split("/");n&&s[s.length-1]||s.pop();for(var i=e.replace(/^\//,"").split("/"),r=0;r<i.length;r++){var o=i[r];".."===o?s.pop():"."!==o&&s.push(o)}return""!==s[0]&&s.unshift(""),s.join("/")}function jo(e){return e.replace(/\/+/g,"/")}var Bo=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},No=function e(t,n,a){return Bo(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Zo(e,t)}(t,n):Bo(t)?function(t,n,a){for(var s=[],i=0;i<t.length;i++)s.push(e(t[i],n,a).source);return Zo(new RegExp("(?:"+s.join("|")+")",Xo(a)),n)}(t,n,a):function(e,t,n){return Qo(qo(e,n),t,n)}(t,n,a)},Fo=qo,Wo=Jo,zo=Qo,Go=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function qo(e,t){for(var n,a=[],s=0,i=0,r="",o=t&&t.delimiter||"/";null!=(n=Go.exec(e));){var u=n[0],d=n[1],l=n.index;if(r+=e.slice(i,l),i=l+u.length,d)r+=d[1];else{var p=e[i],y=n[2],m=n[3],c=n[4],f=n[5],h=n[6],b=n[7];r&&(a.push(r),r="");var v=null!=y&&null!=p&&p!==y,g="+"===h||"*"===h,T="?"===h||"*"===h,w=n[2]||o,_=c||f;a.push({name:m||s++,prefix:y||"",delimiter:w,optional:T,repeat:g,partial:v,asterisk:!!b,pattern:_?Yo(_):b?".*":"[^"+Ko(w)+"]+?"})}}return i<e.length&&(r+=e.substr(i)),r&&a.push(r),a}function Ho(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Vo(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Jo(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",Xo(t)));return function(t,a){for(var s="",i=t||{},r=(a||{}).pretty?Ho:encodeURIComponent,o=0;o<e.length;o++){var u=e[o];if("string"!=typeof u){var d,l=i[u.name];if(null==l){if(u.optional){u.partial&&(s+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(Bo(l)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(l)+"`");if(0===l.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var p=0;p<l.length;p++){if(d=r(l[p]),!n[o].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");s+=(0===p?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?Vo(l):r(l),!n[o].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');s+=u.prefix+d}}else s+=u}return s}}function Ko(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Yo(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function Zo(e,t){return e.keys=t,e}function Xo(e){return e&&e.sensitive?"":"i"}function Qo(e,t,n){Bo(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,s=!1!==n.end,i="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)i+=Ko(o);else{var u=Ko(o.prefix),d="(?:"+o.pattern+")";t.push(o),o.repeat&&(d+="(?:"+u+d+")*"),i+=d=o.optional?o.partial?u+"("+d+")?":"(?:"+u+"("+d+"))?":u+"("+d+")"}}var l=Ko(n.delimiter||"/"),p=i.slice(-l.length)===l;return a||(i=(p?i.slice(0,-l.length):i)+"(?:"+l+"(?=$))?"),i+=s?"$":a&&p?"":"(?="+l+"|$)",Zo(new RegExp("^"+i,Xo(n)),t)}No.parse=Fo,No.compile=function(e,t){return Jo(qo(e,t),t)},No.tokensToFunction=Wo,No.tokensToRegExp=zo;var eu=Object.create(null);function tu(e,t,n){t=t||{};try{var a=eu[e]||(eu[e]=No.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function nu(e,t,n,a){var s="string"==typeof e?{path:e}:e;if(s._normalized)return s;if(s.name){var i=(s=bo({},e)).params;return i&&"object"==typeof i&&(s.params=bo({},i)),s}if(!s.path&&s.params&&t){(s=bo({},s))._normalized=!0;var r=bo(bo({},t.params),s.params);if(t.name)s.name=t.name,s.params=r;else if(t.matched.length){var o=t.matched[t.matched.length-1].path;s.path=tu(o,r,t.path)}return s}var u=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var s=e.indexOf("?");return s>=0&&(n=e.slice(s+1),e=e.slice(0,s)),{path:e,query:n,hash:t}}(s.path||""),d=t&&t.path||"/",l=u.path?Do(u.path,d,n||s.append):d,p=function(e,t,n){void 0===t&&(t={});var a,s=n||Ao;try{a=s(e||"")}catch(e){a={}}for(var i in t){var r=t[i];a[i]=Array.isArray(r)?r.map(Ro):Ro(r)}return a}(u.query,s.query,a&&a.options.parseQuery),y=s.hash||u.hash;return y&&"#"!==y.charAt(0)&&(y="#"+y),{_normalized:!0,path:l,query:p,hash:y}}var au,su=function(){},iu={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,s=n.resolve(this.to,a,this.append),i=s.location,r=s.route,o=s.href,u={},d=n.options.linkActiveClass,l=n.options.linkExactActiveClass,p=null==d?"router-link-active":d,y=null==l?"router-link-exact-active":l,m=null==this.activeClass?p:this.activeClass,c=null==this.exactActiveClass?y:this.exactActiveClass,f=r.redirectedFrom?So(null,nu(r.redirectedFrom),null,n):r;u[c]=Eo(a,f,this.exactPath),u[m]=this.exact||this.exactPath?u[c]:function(e,t){return 0===e.path.replace(xo,"/").indexOf(t.path.replace(xo,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,f);var h=u[c]?this.ariaCurrentValue:null,b=function(e){ru(e)&&(t.replace?n.replace(i,su):n.push(i,su))},v={click:ru};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=b})):v[this.event]=b;var g={class:u},T=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:r,navigate:b,isActive:u[m],isExactActive:u[c]});if(T){if(1===T.length)return T[0];if(T.length>1||!T.length)return 0===T.length?e():e("span",{},T)}if("a"===this.tag)g.on=v,g.attrs={href:o,"aria-current":h};else{var w=ou(this.$slots.default);if(w){w.isStatic=!1;var _=w.data=bo({},w.data);for(var R in _.on=_.on||{},_.on){var A=_.on[R];R in v&&(_.on[R]=Array.isArray(A)?A:[A])}for(var k in v)k in _.on?_.on[k].push(v[k]):_.on[k]=b;var x=w.data.attrs=bo({},w.data.attrs);x.href=o,x["aria-current"]=h}else g.on=v}return e(this.tag,g,this.$slots.default)}};function ru(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function ou(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=ou(t.children)))return t}}var uu="undefined"!=typeof window;function du(e,t,n,a,s){var i=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){lu(i,r,o,e,s)}));for(var u=0,d=i.length;u<d;u++)"*"===i[u]&&(i.push(i.splice(u,1)[0]),d--,u--);return{pathList:i,pathMap:r,nameMap:o}}function lu(e,t,n,a,s,i){var r=a.path,o=a.name,u=a.pathToRegexpOptions||{},d=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:jo(t.path+"/"+e)}(r,s,u.strict);"boolean"==typeof a.caseSensitive&&(u.sensitive=a.caseSensitive);var l={path:d,regex:pu(d,u),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:o,parent:s,matchAs:i,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var s=i?jo(i+"/"+a.path):void 0;lu(e,t,n,a,l,s)})),t[l.path]||(e.push(l.path),t[l.path]=l),void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],y=0;y<p.length;++y){var m={path:p[y],children:a.children};lu(e,t,n,m,s,l.path||"/")}o&&(n[o]||(n[o]=l))}function pu(e,t){return No(e,[],t)}function yu(e,t){var n=du(e),a=n.pathList,s=n.pathMap,i=n.nameMap;function r(e,n,r){var u=nu(e,n,!1,t),d=u.name;if(d){var l=i[d];if(!l)return o(null,u);var p=l.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof u.params&&(u.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in u.params)&&p.indexOf(y)>-1&&(u.params[y]=n.params[y]);return u.path=tu(l.path,u.params),o(l,u,r)}if(u.path){u.params={};for(var m=0;m<a.length;m++){var c=a[m],f=s[c];if(mu(f.regex,u.path,u.params))return o(f,u,r)}}return o(null,u)}function o(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,s="function"==typeof a?a(So(e,n,null,t)):a;if("string"==typeof s&&(s={path:s}),!s||"object"!=typeof s)return o(null,n);var u=s,d=u.name,l=u.path,p=n.query,y=n.hash,m=n.params;if(p=u.hasOwnProperty("query")?u.query:p,y=u.hasOwnProperty("hash")?u.hash:y,m=u.hasOwnProperty("params")?u.params:m,d)return i[d],r({_normalized:!0,name:d,query:p,hash:y,params:m},void 0,n);if(l){var c=function(e,t){return Do(e,t.parent?t.parent.path:"/",!0)}(l,e);return r({_normalized:!0,path:tu(c,m),query:p,hash:y},void 0,n)}return o(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:tu(n,t.params)});if(a){var s=a.matched,i=s[s.length-1];return t.params=a.params,o(i,t)}return o(null,t)}(0,n,e.matchAs):So(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?i[e]:void 0;du([t||e],a,s,i,n),n&&n.alias.length&&du(n.alias.map((function(e){return{path:e,children:[t]}})),a,s,i,n)},getRoutes:function(){return a.map((function(e){return s[e]}))},addRoutes:function(e){du(e,a,s,i)}}}function mu(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var s=1,i=a.length;s<i;++s){var r=e.keys[s-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[s]?_o(a[s]):a[s])}return!0}var cu=uu&&window.performance&&window.performance.now?window.performance:Date;function fu(){return cu.now().toFixed(3)}var hu=fu();function bu(){return hu}function vu(e){return hu=e}var gu=Object.create(null);function Tu(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=bo({},window.history.state);return n.key=bu(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Ru),function(){window.removeEventListener("popstate",Ru)}}function wu(e,t,n,a){if(e.app){var s=e.options.scrollBehavior;s&&e.app.$nextTick((function(){var i=function(){var e=bu();if(e)return gu[e]}(),r=s.call(e,t,n,a?i:null);r&&("function"==typeof r.then?r.then((function(e){Mu(e,i)})).catch((function(e){})):Mu(r,i))}))}}function _u(){var e=bu();e&&(gu[e]={x:window.pageXOffset,y:window.pageYOffset})}function Ru(e){_u(),e.state&&e.state.key&&vu(e.state.key)}function Au(e){return xu(e.x)||xu(e.y)}function ku(e){return{x:xu(e.x)?e.x:window.pageXOffset,y:xu(e.y)?e.y:window.pageYOffset}}function xu(e){return"number"==typeof e}var Su=/^#\d/;function Mu(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var s=Su.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(s){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(s,i={x:xu((n=i).x)?n.x:0,y:xu(n.y)?n.y:0})}else Au(e)&&(t=ku(e))}else a&&Au(e)&&(t=ku(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Ou,Iu=uu&&(-1===(Ou=window.navigator.userAgent).indexOf("Android 2.")&&-1===Ou.indexOf("Android 4.0")||-1===Ou.indexOf("Mobile Safari")||-1!==Ou.indexOf("Chrome")||-1!==Ou.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Cu(e,t){_u();var n=window.history;try{if(t){var a=bo({},n.state);a.key=bu(),n.replaceState(a,"",e)}else n.pushState({key:vu(fu())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Eu(e){Cu(e,!0)}function Uu(e,t,n){var a=function(s){s>=e.length?n():e[s]?t(e[s],(function(){a(s+1)})):a(s+1)};a(0)}var Pu={redirected:2,aborted:4,cancelled:8,duplicated:16};function $u(e,t){return Lu(e,t,Pu.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Lu(e,t,n,a){var s=new Error(a);return s._isRouter=!0,s.from=e,s.to=t,s.type=n,s}var Du=["params","query","hash"];function ju(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Bu(e,t){return ju(e)&&e._isRouter&&(null==t||e.type===t)}function Nu(e,t){return Fu(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Fu(e){return Array.prototype.concat.apply([],e)}var Wu="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function zu(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var Gu=function(e,t){this.router=e,this.base=function(e){if(!e)if(uu){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=Oo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function qu(e,t,n,a){var s=Nu(e,(function(e,a,s,i){var r=function(e,t){return"function"!=typeof e&&(e=au.extend(e)),e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,s,i)})):n(r,a,s,i)}));return Fu(a?s.reverse():s)}function Hu(e,t){if(t)return function(){return e.apply(t,arguments)}}Gu.prototype.listen=function(e){this.cb=e},Gu.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Gu.prototype.onError=function(e){this.errorCbs.push(e)},Gu.prototype.transitionTo=function(e,t,n){var a,s=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var i=this.current;this.confirmTransition(a,(function(){s.updateRoute(a),t&&t(a),s.ensureURL(),s.router.afterHooks.forEach((function(e){e&&e(a,i)})),s.ready||(s.ready=!0,s.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!s.ready&&(Bu(e,Pu.redirected)&&i===Oo||(s.ready=!0,s.readyErrorCbs.forEach((function(t){t(e)}))))}))},Gu.prototype.confirmTransition=function(e,t,n){var a=this,s=this.current;this.pending=e;var i,r,o=function(e){!Bu(e)&&ju(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,d=s.matched.length-1;if(Eo(e,s)&&u===d&&e.matched[u]===s.matched[d])return this.ensureURL(),e.hash&&wu(this.router,s,e,!1),o(((r=Lu(i=s,e,Pu.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",r));var l,p=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),y=p.updated,m=p.deactivated,c=p.activated,f=[].concat(function(e){return qu(e,"beforeRouteLeave",Hu,!0)}(m),this.router.beforeHooks,function(e){return qu(e,"beforeRouteUpdate",Hu)}(y),c.map((function(e){return e.beforeEnter})),(l=c,function(e,t,n){var a=!1,s=0,i=null;Nu(l,(function(e,t,r,o){if("function"==typeof e&&void 0===e.cid){a=!0,s++;var u,d=zu((function(t){var a;((a=t).__esModule||Wu&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:au.extend(t),r.components[o]=t,--s<=0&&n()})),l=zu((function(e){var t="Failed to resolve async component "+o+": "+e;i||(i=ju(e)?e:new Error(t),n(i))}));try{u=e(d,l)}catch(e){l(e)}if(u)if("function"==typeof u.then)u.then(d,l);else{var p=u.component;p&&"function"==typeof p.then&&p.then(d,l)}}})),a||n()})),h=function(t,n){if(a.pending!==e)return o($u(s,e));try{t(e,s,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return Lu(e,t,Pu.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(s,e))):ju(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(function(e,t){return Lu(e,t,Pu.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Du.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(s,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};Uu(f,h,(function(){var n=function(e){return qu(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,s,i){return e(a,s,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),i(e)}))}}(e,n,a)}))}(c);Uu(n.concat(a.router.resolveHooks),h,(function(){if(a.pending!==e)return o($u(s,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){Po(e)}))}))}))},Gu.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Gu.prototype.setupListeners=function(){},Gu.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Oo,this.pending=null};var Vu=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Ju(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Iu&&n;a&&this.listeners.push(Tu());var s=function(){var n=e.current,s=Ju(e.base);e.current===Oo&&s===e._startLocation||e.transitionTo(s,(function(e){a&&wu(t,e,n,!0)}))};window.addEventListener("popstate",s),this.listeners.push((function(){window.removeEventListener("popstate",s)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Cu(jo(a.base+e.fullPath)),wu(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Eu(jo(a.base+e.fullPath)),wu(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Ju(this.base)!==this.current.fullPath){var t=jo(this.base+this.current.fullPath);e?Cu(t):Eu(t)}},t.prototype.getCurrentLocation=function(){return Ju(this.base)},t}(Gu);function Ju(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(jo(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Ku=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Ju(e);if(!/^\/#/.test(t))return window.location.replace(jo(e+"/#"+t)),!0}(this.base)||Yu()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Iu&&t;n&&this.listeners.push(Tu());var a=function(){var t=e.current;Yu()&&e.transitionTo(Zu(),(function(a){n&&wu(e.router,a,t,!0),Iu||ed(a.fullPath)}))},s=Iu?"popstate":"hashchange";window.addEventListener(s,a),this.listeners.push((function(){window.removeEventListener(s,a)}))}},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Qu(e.fullPath),wu(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){ed(e.fullPath),wu(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Zu()!==t&&(e?Qu(t):ed(t))},t.prototype.getCurrentLocation=function(){return Zu()},t}(Gu);function Yu(){var e=Zu();return"/"===e.charAt(0)||(ed("/"+e),!1)}function Zu(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Xu(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Qu(e){Iu?Cu(Xu(e)):window.location.hash=e}function ed(e){Iu?Eu(Xu(e)):window.location.replace(Xu(e))}var td=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){Bu(e,Pu.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Gu),nd=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=yu(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Iu&&!1!==e.fallback,this.fallback&&(t="hash"),uu||(t="abstract"),this.mode=t,t){case"history":this.history=new Vu(this,e.base);break;case"hash":this.history=new Ku(this,e.base,this.fallback);break;case"abstract":this.history=new td(this,e.base)}},ad={currentRoute:{configurable:!0}};function sd(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}nd.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},ad.currentRoute.get=function(){return this.history&&this.history.current},nd.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Vu||n instanceof Ku){var a=function(e){n.setupListeners(),function(e){var a=n.current,s=t.options.scrollBehavior;Iu&&s&&"fullPath"in e&&wu(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},nd.prototype.beforeEach=function(e){return sd(this.beforeHooks,e)},nd.prototype.beforeResolve=function(e){return sd(this.resolveHooks,e)},nd.prototype.afterEach=function(e){return sd(this.afterHooks,e)},nd.prototype.onReady=function(e,t){this.history.onReady(e,t)},nd.prototype.onError=function(e){this.history.onError(e)},nd.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},nd.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},nd.prototype.go=function(e){this.history.go(e)},nd.prototype.back=function(){this.go(-1)},nd.prototype.forward=function(){this.go(1)},nd.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},nd.prototype.resolve=function(e,t,n){var a=nu(e,t=t||this.history.current,n,this),s=this.match(a,t),i=s.redirectedFrom||s.fullPath,r=function(e,t,n){var a="hash"===n?"#"+t:t;return e?jo(e+"/"+a):a}(this.history.base,i,this.mode);return{location:a,route:s,href:r,normalizedTo:a,resolved:s}},nd.prototype.getRoutes=function(){return this.matcher.getRoutes()},nd.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},nd.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(nd.prototype,ad),nd.install=function e(t){if(!e.installed||au!==t){e.installed=!0,au=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",$o),t.component("RouterLink",iu);var s=t.config.optionMergeStrategies;s.beforeRouteEnter=s.beforeRouteLeave=s.beforeRouteUpdate=s.created}},nd.version="3.5.3",nd.isNavigationFailure=Bu,nd.NavigationFailureType=Pu,nd.START_LOCATION=Oo,uu&&window.Vue&&window.Vue.use(nd);const id=nd;var rd=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};function od(e,t,n,a,s,i,r,o){var u,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=n,d._compiled=!0),a&&(d.functional=!0),i&&(d._scopeId="data-v-"+i),r?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),s&&s.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=u):s&&(u=o?function(){s.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:s),u)if(d.functional){d._injectStyles=u;var l=d.render;d.render=function(e,t){return u.call(t),l(e,t)}}else{var p=d.beforeCreate;d.beforeCreate=p?[].concat(p,u):[u]}return{exports:e,options:d}}rd._withStripped=!0,n(387);var ud=od({},rd,[],!1,null,null,null);ud.options.__file="node_modules/hardhat-docgen/src/App.vue";const dd=ud.exports;var ld=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};ld._withStripped=!0;var pd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};pd._withStripped=!0;const yd=JSON.parse('{"u2":"hardhat-docgen","cj":"https://github.com/ItsNickBarry/hardhat-docgen"}');var md=od({data:function(){return{repository:yd.cj,name:yd.u2}},methods:{openLink(e){window.open(e,"_blank")}}},pd,[],!1,null,null,null);md.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";const cd=md.exports;var fd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[n("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[e._v("\n    <- Go back\n  ")])],1)};fd._withStripped=!0;var hd=od({},fd,[],!1,null,null,null);hd.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";const bd=hd.exports;var vd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};vd._withStripped=!0;var gd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};gd._withStripped=!0;var Td=od({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},gd,[],!1,null,null,null);Td.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";const wd={components:{MemberSection:Td.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}};var _d=od(wd,vd,[],!1,null,null,null);_d.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";const Rd=_d.exports;var Ad=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};Ad._withStripped=!0;var kd=od({components:{Member:Rd},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},Ad,[],!1,null,null,null);kd.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var xd=od({components:{Member:Rd,MemberSet:kd.exports,HeaderBar:bd,FooterBar:cd},props:{json:{type:Object,default:()=>new Object}}},ld,[],!1,null,null,null);xd.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";const Sd=xd.exports;var Md=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[n("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),n("FooterBar",{staticClass:"mt-20"})],1)};Md._withStripped=!0;var Od=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};Od._withStripped=!0;var Id=od({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},Od,[],!1,null,null,null);Id.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var Cd=od({components:{Branch:Id.exports,FooterBar:cd},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},Md,[],!1,null,null,null);Cd.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";const Ed=Cd.exports;ho.use(id);const Ud={"contracts/AdminControlled.sol:AdminControlled":{source:"contracts/AdminControlled.sol",name:"AdminControlled",title:"AdminControlled",author:"Aurora Team",details:"Implementation of Admin controlled contract      This contract implements inherits access control upgradeable contract,      in which provides a role based access control (RBAC) for admin priveleges.      It also provides other privileges such as:      - Pausing the contract      - Sending and receiving ETH to/from this contract      - Delegating contract calls      - Changing state variable value using its storage slot      - Transfering its ownership to a new admin",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}},"contracts/DelegateCallGuard.sol:DelegateCallGuard":{source:"contracts/DelegateCallGuard.sol",name:"DelegateCallGuard",title:"DelegateCallGuard",author:"Aurora Team",details:"Implementation of delegatecall guard contract      This abstract contract is only used by the adminControlled in order to      guard any unsafe delegatcall and check that is only called throught the      proxy contract not the implementation contract.      More details https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct",methods:{"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"}}},"contracts/ITreasury.sol:ITreasury":{source:"contracts/ITreasury.sol",name:"ITreasury",methods:{"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_deposit",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/JetStakingV1.sol:JetStakingV1":{source:"contracts/JetStakingV1.sol",name:"JetStakingV1",title:"JetStakingV1",author:"Aurora Team",details:"Implementation of Jet staking contract      This contract implements the staking mechanics for AURORA ERC20 token.      A user can stake any amount of AURORA tokens, and get rewarded in both      AURORA and other stream tokens based on the rewards schedules.      Stream rewards can be claimed any time however AURORA can't be claimed      unless the user unstakes his full/partial amount of shares.      This contract is AdminControlled which has a tremendous power. However      hopfully it be governed by a community wallet.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/Treasury.sol:Treasury":{source:"contracts/Treasury.sol",name:"Treasury",title:"Treasury",author:"Aurora Team",details:"Implementation of the treasury contract      This contract is holding all the aurora staking and streams funds.      It inherits adminControlled which gives admin more privilegs over this      this contract.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenAdded",type:"event"},"TokenRemoved(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenRemoved",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TREASURY_MANAGER_ROLE()":{inputs:[],name:"TREASURY_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"addSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"adds token as a supproted rewards token by Treasury supported tokens means any future stream token should be whitelisted here"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x1b0d68e9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x1b0d68e9",type:"bytes32"}],name:"c_0x1b0d68e9",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address[],uint256)":{inputs:[{internalType:"address[]",name:"_supportedTokens",type:"address[]"},{internalType:"uint256",name:"_flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_supportedTokens:"list of supported tokens"},notice:"initializes ownable Treasury with list of managers and supported tokens"},"isSupportedToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSupportedToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Used by jet staking contracts",params:{_amount:"token to transfer to user",_token:"token to transfer to user",_user:"user to transfer tokens to"},notice:"transfers token amount from Treasury balance to user."},"removeSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"removeSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"removed token as a supproted rewards token by Treasury"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}},"contracts/testing/AdminControlledTesting.sol:AdminControlledTesting":{source:"contracts/testing/AdminControlledTesting.sol",name:"AdminControlledTesting",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"c_0xe9782322(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe9782322",type:"bytes32"}],name:"c_0xe9782322",outputs:[],stateMutability:"pure",type:"function"},"changeMe()":{inputs:[],name:"changeMe",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getSignatureForTokenMinting()":{inputs:[],name:"getSignatureForTokenMinting",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"nonpayable",type:"function"},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"pauseMe()":{inputs:[],name:"pauseMe",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}},"contracts/testing/AdminControlledTesting.sol:TargetContract":{source:"contracts/testing/AdminControlledTesting.sol",name:"TargetContract",methods:{"c_0x5737387f(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x5737387f",type:"bytes32"}],name:"c_0x5737387f",outputs:[],stateMutability:"pure",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"sender()":{inputs:[],name:"sender",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"targetFunction(string)":{inputs:[{internalType:"string",name:"_nameTarget",type:"string"}],name:"targetFunction",outputs:[],stateMutability:"payable",type:"function"},"value()":{inputs:[],name:"value",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/testing/JetStakingTesting.sol:JetStakingTesting":{source:"contracts/testing/JetStakingTesting.sol",name:"JetStakingTesting",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"before(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"before",outputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"rewardPerShareAurora",type:"uint256"},{internalType:"uint256",name:"scheduleCalculated",type:"uint256"}],stateMutability:"view",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe29a09b1(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe29a09b1",type:"bytes32"}],name:"c_0xe29a09b1",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"calculateWeightedShares(uint256,uint256)":{inputs:[{internalType:"uint256",name:"shares",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"calculateWeightedShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"callBeforeTwice()":{inputs:[],name:"callBeforeTwice",outputs:[],stateMutability:"nonpayable",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"tempMoveRewardsToPending(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"tempMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function"},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"updateUserCalculation()":{inputs:[],name:"updateUserCalculation",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/testing/Token.sol:Token":{source:"contracts/testing/Token.sol",name:"Token",constructor:{inputs:[{internalType:"uint256",name:"initialSupply",type:"uint256"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"c_0x8a2e481c(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x8a2e481c",type:"bytes32"}],name:"c_0x8a2e481c",outputs:[],stateMutability:"pure",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"mint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeFunctionSignature.sol:JetStakingV1ChangeFunctionSignature":{source:"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeFunctionSignature.sol",name:"JetStakingV1ChangeFunctionSignature",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchStakeOnBehalfOfOtherUsers(address[],uint256[],uint256,bool)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"},{internalType:"bool",name:"checkLength",type:"bool"}],name:"batchStakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function"},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"before(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"before",outputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"rewardPerShareAurora",type:"uint256"},{internalType:"uint256",name:"scheduleCalculated",type:"uint256"}],stateMutability:"view",type:"function"},"c_0x0dd456cf(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x0dd456cf",type:"bytes32"}],name:"c_0x0dd456cf",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe29a09b1(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe29a09b1",type:"bytes32"}],name:"c_0xe29a09b1",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"calculateWeightedShares(uint256,uint256)":{inputs:[{internalType:"uint256",name:"shares",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"calculateWeightedShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"callBeforeTwice()":{inputs:[],name:"callBeforeTwice",outputs:[],stateMutability:"nonpayable",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"tempMoveRewardsToPending(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"tempMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function"},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"updateUserCalculation()":{inputs:[],name:"updateUserCalculation",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeInStorage.sol:JetStakingV1ChangeInStorage":{source:"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeInStorage.sol",name:"JetStakingV1ChangeInStorage",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xa2740478(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xa2740478",type:"bytes32"}],name:"c_0xa2740478",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"storageVar()":{inputs:[],name:"storageVar",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeInStorageAndLogic.sol:JetStakingV1ChangeInStorageAndLogic":{source:"contracts/testing/upgrades/JetStakingV2/JetStakingV1ChangeInStorageAndLogic.sol",name:"JetStakingV1ChangeInStorageAndLogic",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0x6aeb351a(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x6aeb351a",type:"bytes32"}],name:"c_0x6aeb351a",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"storageVar()":{inputs:[],name:"storageVar",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateStorageVar(uint256)":{inputs:[{internalType:"uint256",name:"newVal",type:"uint256"}],name:"updateStorageVar",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/testing/upgrades/JetStakingV2/JetStakingV1ExtraFunctionality.sol:JetStakingV1ExtraFunctionality":{source:"contracts/testing/upgrades/JetStakingV2/JetStakingV1ExtraFunctionality.sol",name:"JetStakingV1ExtraFunctionality",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"Pending(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Pending",type:"event"},"Released(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Released",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Staked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Staked",type:"event"},"StreamCreated(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamCreated",type:"event"},"StreamProposalCancelled(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposalCancelled",type:"event"},"StreamProposed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamProposed",type:"event"},"StreamRemoved(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"streamId",type:"uint256"},{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"StreamRemoved",type:"event"},"Unstaked(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"Unstaked",type:"event"}},methods:{"AIRDROP_ROLE()":{inputs:[],name:"AIRDROP_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"CLAIM_ROLE()":{inputs:[],name:"CLAIM_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STREAM_MANAGER_ROLE()":{inputs:[],name:"STREAM_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"auroraToken()":{inputs:[],name:"auroraToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"batchClaimOnBehalfOfAnotherUser(address,uint256[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"batchClaimOnBehalfOfAnotherUser when gas limits prevent users from claiming all.",params:{account:"the user account address.",streamIds:"to claim."}},"batchClaimOnBehalfOfOtherUsers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchClaimOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"batchMoveRewardsToPending(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves a set of stream Id rewards to pending. Allows user to select stream ids to claim from UI.",params:{streamIds:"stream indexes"}},"batchWithdraw(uint256[])":{inputs:[{internalType:"uint256[]",name:"streamIds",type:"uint256[]"}],name:"batchWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw a set of stream Ids. Allows user to select stream ids to withdraw from UI.",params:{streamIds:"to withdraw."}},"before(uint256,uint256)":{inputs:[{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"before",outputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"rewardPerShareAurora",type:"uint256"},{internalType:"uint256",name:"scheduleCalculated",type:"uint256"}],stateMutability:"view",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xc12a0e33(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xc12a0e33",type:"bytes32"}],name:"c_0xc12a0e33",outputs:[],stateMutability:"pure",type:"function"},"c_0xe29a09b1(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe29a09b1",type:"bytes32"}],name:"c_0xe29a09b1",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"c_0xe32672d9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe32672d9",type:"bytes32"}],name:"c_0xe32672d9",outputs:[],stateMutability:"pure",type:"function"},"calculateWeightedShares(uint256,uint256)":{inputs:[{internalType:"uint256",name:"shares",type:"uint256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"calculateWeightedShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"callBeforeTwice()":{inputs:[],name:"callBeforeTwice",outputs:[],stateMutability:"nonpayable",type:"function"},"cancelStreamProposal(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"cancelStreamProposal",outputs:[],stateMutability:"nonpayable",type:"function",details:"cancelStreamProposal cancels a proposal any time before the stream becomes active (created).",params:{streamId:"the stream index"}},"claimAllOnBehalfOfAnotherUser(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimAllOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of another user.",params:{account:"the user account address."}},"claimAllOnBehalfOfOtherUsers(address[])":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],name:"claimAllOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim all stream rewards on behalf of other users.",params:{accounts:"the user account addresses."}},"claimOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"claimOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"Claim a stream's rewards on behalf of another user.",params:{account:"the user account address.",streamId:"to claim."}},"createStream(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"rewardTokenAmount",type:"uint256"}],name:"createStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"create new stream (only stream owner) stream owner must approve reward tokens to this contract.",params:{streamId:"stream id"}},"dummy()":{inputs:[],name:"dummy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getAmountOfShares(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getAmountOfShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets a user stream shares",params:{account:"the user address",streamId:"stream index"},returns:{_0:"user stream shares"}},"getLatestRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getLatestRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps + scheduled reward up till now"}},"getPending(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getPending",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream pending reward",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.pendings[streamId]"}},"getReleaseTime(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream reward release time",params:{account:"user account",streamId:"stream index"},returns:{_0:"user.releaseTime[streamId]"}},"getRewardPerShare(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getRewardPerShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"streams[streamId].rps"}},"getRewardPerShareForUser(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getRewardPerShareForUser",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's reward per share (RPS) for a stream",params:{streamId:"stream index"},returns:{_0:"user.rpsDuringLastClaim[streamId]"}},"getRewardsAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"lastUpdate",type:"uint256"}],name:"getRewardsAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculates and gets the latest released rewards.",params:{streamId:"stream index"},returns:{_0:"rewards released since last update."}},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStream(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStream",outputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"auroraClaimedAmount",type:"uint256"},{internalType:"uint256",name:"rewardDepositAmount",type:"uint256"},{internalType:"uint256",name:"rewardClaimedAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256",name:"lastTimeOwnerClaimed",type:"uint256"},{internalType:"uint256",name:"tau",type:"uint256"},{internalType:"bool",name:"isProposed",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function",details:"get the stream data",params:{streamId:"the stream index"},notice:"this function doesn't return the stream schedule due to some stake slots limitations. To get the stream schedule, refer to getStreamSchedule"},"getStreamClaimableAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"getStreamClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user's stream claimable amount",params:{streamId:"stream index"},returns:{_0:"(latesRPS - user.rpsDuringLastClaim) * user.shares"}},"getStreamOwnerClaimableAmount(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamOwnerClaimableAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Stream owner claimable AURORA.",params:{streamId:"the stream index"}},"getStreamSchedule(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"getStreamSchedule",outputs:[{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"}],stateMutability:"view",type:"function",details:"get the stream schedule data",params:{streamId:"the stream index"}},"getStreamsCount()":{inputs:[],name:"getStreamsCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"get the streams count",returns:{_0:"streams.length"}},"getTotalAmountOfStakedAurora()":{inputs:[],name:"getTotalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total amount of staked aurora",returns:{_0:"totalAmountOfStakedAurora + latest reward schedule"}},"getTreasuryBalance(address)":{inputs:[{internalType:"address",name:"token",type:"address"}],name:"getTreasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Get the treasury balance",params:{token:"the token address"}},"getUserShares(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the user shares",params:{account:"the user address"},returns:{_0:"user shares"}},"getUserTotalDeposit(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getUserTotalDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"gets the total user deposit",params:{account:"the user address"},returns:{_0:"user total deposit in (AURORA)"}},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address,address,uint256[],uint256[],uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"address",name:"aurora",type:"address"},{internalType:"address",name:"streamOwner",type:"address"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tauAuroraStream",type:"uint256"},{internalType:"uint256",name:"_flags",type:"uint256"},{internalType:"address",name:"_treasury",type:"address"},{internalType:"uint256",name:"_maxWeight",type:"uint256"},{internalType:"uint256",name:"_minWeight",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"initialize the contract and deploys the first stream (AURORA)",params:{_flags:"admin controlled contract flags",_maxWeight:"max stream reward weighting coefficient",_minWeight:"min stream reward weighting coefficient",_treasury:"the Aurora treasury contract address",aurora:"token contract address",scheduleRewards:"init the schedule amounts",scheduleTimes:"init the schedule time",tauAuroraStream:"release time constant per stream (e.g AURORA stream)"},notice:"By calling this function, the deployer of this contract must make sure that the AURORA reward amount was deposited to the treasury contract before initializing of the default AURORA stream."},"moveAllRewardsToPending()":{inputs:[],name:"moveAllRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves all the user rewards to pending reward."},"moveRewardsToPending(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"moveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function",details:"moves the reward for specific stream Id to pending rewards. It will require a waiting time untill it get released. Users call this in function in order to claim rewards.",params:{streamId:"stream index"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"proposeStream(address,address,uint256,uint256,uint256[],uint256[],uint256)":{inputs:[{internalType:"address",name:"streamOwner",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"auroraDepositAmount",type:"uint256"},{internalType:"uint256",name:"maxDepositAmount",type:"uint256"},{internalType:"uint256[]",name:"scheduleTimes",type:"uint256[]"},{internalType:"uint256[]",name:"scheduleRewards",type:"uint256[]"},{internalType:"uint256",name:"tau",type:"uint256"}],name:"proposeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"An admin of the staking contract can whitelist (propose) a stream. Whitelisting of the stream provides the option for the stream creator (presumably the issuing party of a specific token) to deposit some ERC-20 tokens on the staking contract and potentially get in return some AURORA tokens. Deposited ERC-20 tokens will be distributed to the stakers over some period of time.",params:{auroraDepositAmount:"Amount of the AURORA deposited by the Admin.",maxDepositAmount:"The upper amount of the tokens that should be deposited by the stream owner",rewardToken:"the address of the ERC-20 tokens to be deposited in the stream",scheduleRewards:"array of reward amounts that are kept on the staking contract at each block height",scheduleTimes:"array of block heights for each schedule time",streamOwner:"only this account would be able to create a stream",tau:"the tau is (pending release period) for this stream (e.g one day)"},notice:"treasury manager must call"},"releaseAuroraRewardsToStreamOwner(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"releaseAuroraRewardsToStreamOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"the release of AURORA tokens to the stream creator is subjected to the same schedule as rewards. Thus if for a specific moment in time 30% of the rewards are distributed, then it means that 30% of the AURORA deposit can be withdrawn by the stream creator too. called by the stream owner",params:{streamId:"the stream index"}},"removeStream(uint256,address)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"address",name:"streamFundReceiver",type:"address"}],name:"removeStream",outputs:[],stateMutability:"nonpayable",type:"function",details:"removes a stream (only default admin role)",params:{streamFundReceiver:"receives the rest of the reward tokens in the stream",streamId:"stream index"}},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"rewardsSchedule(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"rewardsSchedule",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"calculate the total amount of the released tokens within a period (start & end)",params:{end:"is the end timestamp (e.g block.timestamp .. now)",start:"is the start timestamp within the schedule",streamId:"the stream index"},returns:{_0:"amount of the released tokens for that period"}},"stake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"a user stakes amount of AURORA tokens The user should approve these tokens to the treasury contract in order to complete the stake.",params:{amount:"is the AURORA amount."}},"stakeOnBehalfOfAnotherUser(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeOnBehalfOfAnotherUser",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfAnotherUser is called for airdropping Aurora users",params:{account:"the account address",amount:"in AURORA tokens WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"stakeOnBehalfOfOtherUsers(address[],uint256[],uint256)":{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256",name:"batchAmount",type:"uint256"}],name:"stakeOnBehalfOfOtherUsers",outputs:[],stateMutability:"nonpayable",type:"function",details:"stakeOnBehalfOfOtherUsers called for airdropping Aurora users",params:{accounts:"the account address",amounts:"in AURORA tokens",batchAmount:"equals to the sum of amounts WARNING: rewards are not claimed during stake. Airdrop script must claim or only distribute to accounts without stake"}},"startEndScheduleIndex(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"startEndScheduleIndex",outputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],stateMutability:"view",type:"function",details:"gets start index and end index in a stream schedule",params:{end:"end time (in seconds)",start:"start time (in seconds)",streamId:"stream index"}},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"tempMoveRewardsToPending(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"streamId",type:"uint256"}],name:"tempMoveRewardsToPending",outputs:[],stateMutability:"nonpayable",type:"function"},"totalAmountOfStakedAurora()":{inputs:[],name:"totalAmountOfStakedAurora",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAuroraShares()":{inputs:[],name:"totalAuroraShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStreamShares()":{inputs:[],name:"totalStreamShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"touchedAt()":{inputs:[],name:"touchedAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake amount from user shares value. The rest is re-staked",params:{amount:"to unstake"}},"unstakeAll()":{inputs:[],name:"unstakeAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"unstake all the user's shares"},"updateTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"restricted for the admin only. Admin should pause this contract before changing the treasury address by setting the pause =1 (for changing this variable, call adminPause(1))",params:{_treasury:"treasury contract address for the reward tokens"},notice:"updates treasury account"},"updateUserCalculation()":{inputs:[],name:"updateUserCalculation",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"streamId",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw amount in the pending. User should wait for pending time (tau constant) in order to be able to withdraw.",params:{streamId:"stream index"}},"withdrawAll()":{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"withdraw all claimed balances which have passed pending periode. This function will reach gas limit with too many streams, so the frontend will allow individual stream withdrawals and disable withdrawAll."}}},"contracts/testing/upgrades/Treasury/TreasuryChangeFunctionSignature.sol:TreasuryChangeFunctionSignature":{source:"contracts/testing/upgrades/Treasury/TreasuryChangeFunctionSignature.sol",name:"TreasuryChangeFunctionSignature",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenAdded",type:"event"},"TokenRemoved(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenRemoved",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TREASURY_MANAGER_ROLE()":{inputs:[],name:"TREASURY_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"addSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"adds token as a supproted rewards token by Treasury supported tokens means any future stream token should be whitelisted here"},"addSupportedToken(address,bool)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bool",name:"isSupported",type:"bool"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x15664c3c(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x15664c3c",type:"bytes32"}],name:"c_0x15664c3c",outputs:[],stateMutability:"pure",type:"function"},"c_0x1b0d68e9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x1b0d68e9",type:"bytes32"}],name:"c_0x1b0d68e9",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address[],uint256)":{inputs:[{internalType:"address[]",name:"_supportedTokens",type:"address[]"},{internalType:"uint256",name:"_flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_supportedTokens:"list of supported tokens"},notice:"initializes ownable Treasury with list of managers and supported tokens"},"isSupportedToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSupportedToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Used by jet staking contracts",params:{_amount:"token to transfer to user",_token:"token to transfer to user",_user:"user to transfer tokens to"},notice:"transfers token amount from Treasury balance to user."},"removeSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"removeSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"removed token as a supproted rewards token by Treasury"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}},"contracts/testing/upgrades/Treasury/TreasuryChangeInStorage.sol:TreasuryChangeInStorage":{source:"contracts/testing/upgrades/Treasury/TreasuryChangeInStorage.sol",name:"TreasuryChangeInStorage",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenAdded",type:"event"},"TokenRemoved(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenRemoved",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TREASURY_MANAGER_ROLE()":{inputs:[],name:"TREASURY_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"addSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"adds token as a supproted rewards token by Treasury supported tokens means any future stream token should be whitelisted here"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x1b0d68e9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x1b0d68e9",type:"bytes32"}],name:"c_0x1b0d68e9",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0x5c78e45b(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x5c78e45b",type:"bytes32"}],name:"c_0x5c78e45b",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address[],uint256)":{inputs:[{internalType:"address[]",name:"_supportedTokens",type:"address[]"},{internalType:"uint256",name:"_flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_supportedTokens:"list of supported tokens"},notice:"initializes ownable Treasury with list of managers and supported tokens"},"isSupportedToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSupportedToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"newTreasury()":{inputs:[],name:"newTreasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Used by jet staking contracts",params:{_amount:"token to transfer to user",_token:"token to transfer to user",_user:"user to transfer tokens to"},notice:"transfers token amount from Treasury balance to user."},"removeSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"removeSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"removed token as a supproted rewards token by Treasury"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}},"contracts/testing/upgrades/Treasury/TreasuryChangeInStorageAndLogic.sol:TreasuryChangeInStorageAndLogic":{source:"contracts/testing/upgrades/Treasury/TreasuryChangeInStorageAndLogic.sol",name:"TreasuryChangeInStorageAndLogic",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenAdded",type:"event"},"TokenRemoved(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenRemoved",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TREASURY_MANAGER_ROLE()":{inputs:[],name:"TREASURY_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"addSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"adds token as a supproted rewards token by Treasury supported tokens means any future stream token should be whitelisted here"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x1b0d68e9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x1b0d68e9",type:"bytes32"}],name:"c_0x1b0d68e9",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0x8b349575(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x8b349575",type:"bytes32"}],name:"c_0x8b349575",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address[],uint256)":{inputs:[{internalType:"address[]",name:"_supportedTokens",type:"address[]"},{internalType:"uint256",name:"_flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_supportedTokens:"list of supported tokens"},notice:"initializes ownable Treasury with list of managers and supported tokens"},"isSupportedToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSupportedToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"newTreasury()":{inputs:[],name:"newTreasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Used by jet staking contracts",params:{_amount:"token to transfer to user",_token:"token to transfer to user",_user:"user to transfer tokens to"},notice:"transfers token amount from Treasury balance to user."},"removeSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"removeSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"removed token as a supproted rewards token by Treasury"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}},"updateStorageVar(address)":{inputs:[{internalType:"address",name:"newTreasuryVal",type:"address"}],name:"updateStorageVar",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/testing/upgrades/Treasury/TreasuryExtraFunctionality.sol:TreasuryExtraFunctionality":{source:"contracts/testing/upgrades/Treasury/TreasuryExtraFunctionality.sol",name:"TreasuryExtraFunctionality",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenAdded",type:"event"},"TokenRemoved(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"addedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"TokenRemoved",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSE_ROLE()":{inputs:[],name:"PAUSE_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TREASURY_MANAGER_ROLE()":{inputs:[],name:"TREASURY_MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"__AdminControlled_init(uint256)":{inputs:[{internalType:"uint256",name:"_flags",type:"uint256"}],name:"__AdminControlled_init",outputs:[],stateMutability:"nonpayable",type:"function",details:"__AdminControlled_init initializes this contract, setting pause flags and granting admin roles.",params:{_flags:"flags variable will be used for pausing this contract."}},"addSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"addSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"adds token as a supproted rewards token by Treasury supported tokens means any future stream token should be whitelisted here"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"adminDelegatecall(address,bytes)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"adminDelegatecall",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function","custom:oz-upgrades-unsafe-allow":"delegatecall",details:"adminDelegatecall allows this contract to delegate calls to a target contract and execute it in the context of this contract. Only default admin role can call this function.",params:{data:"is the ABI encoded function signature and its values.",target:"the target contract address"}},"adminPause(uint256)":{inputs:[{internalType:"uint256",name:"flags",type:"uint256"}],name:"adminPause",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminPause pauses this contract. Only pause role or default admin role can access this function.",params:{flags:"flags variable is used for pausing this contract."}},"adminReceiveEth()":{inputs:[],name:"adminReceiveEth",outputs:[],stateMutability:"payable",type:"function",details:"adminReceiveEth allows this contract to receive ETH anyone can call this function"},"adminSendEth(address,uint256)":{inputs:[{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"adminSendEth",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSendEth sends ETH from this contract to destination only default admin role can call this function",params:{amount:"of ETH",destination:"is the receiver address"}},"adminSstore(uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"adminSstore",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstore updates the state variable value. only default admin role can call this function.",params:{key:"is the storage slot of the state variable",value:"is the state variable value"}},"adminSstoreWithMask(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"key",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"adminSstoreWithMask",outputs:[],stateMutability:"nonpayable",type:"function",details:"adminSstoreWithMask similar to adminSstore except it updates the state variable value after xor-ing this value with the old value and the mask, so the new value should be a result of xor(and(xor(value, oldval), mask), oldval). Only default admin role can call this function.",params:{key:"is the storage slot of the state variable",mask:"this value is used in calculating the new value",value:"is the state variable value"}},"c_0x1b0d68e9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x1b0d68e9",type:"bytes32"}],name:"c_0x1b0d68e9",outputs:[],stateMutability:"pure",type:"function"},"c_0x2f1456f9(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x2f1456f9",type:"bytes32"}],name:"c_0x2f1456f9",outputs:[],stateMutability:"pure",type:"function"},"c_0x99a7b5bf(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0x99a7b5bf",type:"bytes32"}],name:"c_0x99a7b5bf",outputs:[],stateMutability:"pure",type:"function"},"c_0xe3018ceb(bytes32)":{inputs:[{internalType:"bytes32",name:"c__0xe3018ceb",type:"bytes32"}],name:"c_0xe3018ceb",outputs:[],stateMutability:"pure",type:"function"},"dummy()":{inputs:[],name:"dummy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initialize(address[],uint256)":{inputs:[{internalType:"address[]",name:"_supportedTokens",type:"address[]"},{internalType:"uint256",name:"_flags",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_supportedTokens:"list of supported tokens"},notice:"initializes ownable Treasury with list of managers and supported tokens"},"isSupportedToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isSupportedToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payRewards(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"payRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Used by jet staking contracts",params:{_amount:"token to transfer to user",_token:"token to transfer to user",_user:"user to transfer tokens to"},notice:"transfers token amount from Treasury balance to user."},"removeSupportedToken(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"removeSupportedToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_token:"stream ERC20 token address"},notice:"removed token as a supproted rewards token by Treasury"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"transferOwnership updates the current admin address with a new one. This admin is used for colleting dust tokens, and releasing some locked funds. It is used by the staking contract. It must be assinged to the community treasury wallet that will be governed by DAO.",params:{newAdmin:"new admin address."}}}}};new ho({el:"#app",router:new id({routes:[{path:"/",component:Ed,props:()=>({json:Ud})},{path:"*",component:Sd,props:e=>({json:Ud[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(dd)})})()})();